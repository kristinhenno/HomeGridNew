{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _classCallCheck from\"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function _templateObject(){var data=_taggedTemplateLiteral([\"\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{Component}from\"react\";import styled from\"styled-components\";import API from\"./utils/API\";var Thesaurus=/*#__PURE__*/function(_React$Component){_inherits(Thesaurus,_React$Component);var _super=_createSuper(Thesaurus);function Thesaurus(){var _this;_classCallCheck(this,Thesaurus);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={userInput:\"thesaurus\",syn:[]};_this.handleChange=function(event){_this.setState({userInput:event.target.value});event.preventDefault();};_this.handleKeyPress=function(event){if(event.key===\"Enter\"){_this.retrieveThesaurus();}// console.log(this.state.syn);\n};_this.retrieveThesaurus=function(i){if(i){i.preventDefault();}API.thesaurus(_this.state.userInput).then(function(res){_this.setState({syn:res.data});});};return _this;}_createClass(Thesaurus,[{key:\"componentDidMount\",value:function componentDidMount(){this.retrieveThesaurus();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Style,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"input\",{onKeyPress:this.handleKeyPress,onChange:this.handleChange}),this.state.syn.map(function(def){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,def.meta.id.split(\":\")[0]),def.meta.syns[0].map(function(syn){return/*#__PURE__*/React.createElement(\"p\",null,syn);}));})));}}]);return Thesaurus;}(React.Component);var Style=styled.section(_templateObject());export default Thesaurus;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Thesaurus.js"],"names":["React","Component","styled","API","Thesaurus","state","userInput","syn","handleChange","event","setState","target","value","preventDefault","handleKeyPress","key","retrieveThesaurus","i","thesaurus","then","res","data","map","def","meta","id","split","syns","Style","section"],"mappings":"qhCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,GAAP,KAAgB,aAAhB,C,GAEMC,CAAAA,S,mVACJC,K,CAAQ,CACNC,SAAS,CAAE,WADL,CAENC,GAAG,CAAE,EAFC,C,OAKRC,Y,CAAe,SAAAC,KAAK,CAAI,CACtB,MAAKC,QAAL,CAAc,CACZJ,SAAS,CAAEG,KAAK,CAACE,MAAN,CAAaC,KADZ,CAAd,EAGAH,KAAK,CAACI,cAAN,GACD,C,OAEDC,c,CAAiB,SAAAL,KAAK,CAAI,CACxB,GAAIA,KAAK,CAACM,GAAN,GAAc,OAAlB,CAA2B,CACzB,MAAKC,iBAAL,GACD,CACD;AACD,C,OAEDA,iB,CAAoB,SAAAC,CAAC,CAAI,CACvB,GAAIA,CAAJ,CAAO,CACLA,CAAC,CAACJ,cAAF,GACD,CAEDV,GAAG,CAACe,SAAJ,CAAc,MAAKb,KAAL,CAAWC,SAAzB,EAAoCa,IAApC,CAAyC,SAAAC,GAAG,CAAI,CAC9C,MAAKV,QAAL,CAAc,CACZH,GAAG,CAAEa,GAAG,CAACC,IADG,CAAd,EAGD,CAJD,EAKD,C,kGAEmB,CAClB,KAAKL,iBAAL,GACD,C,uCAEQ,CACP,mBACE,oBAAC,KAAD,mBACE,4CACE,6BACE,UAAU,CAAE,KAAKF,cADnB,CAEE,QAAQ,CAAE,KAAKN,YAFjB,EADF,CAKG,KAAKH,KAAL,CAAWE,GAAX,CAAee,GAAf,CAAmB,SAAAC,GAAG,qBACrB,4CACE,8BAAKA,GAAG,CAACC,IAAJ,CAASC,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAL,CADF,CAGGH,GAAG,CAACC,IAAJ,CAASG,IAAT,CAAc,CAAd,EAAiBL,GAAjB,CAAqB,SAAAf,GAAG,qBACvB,6BAAIA,GAAJ,CADuB,EAAxB,CAHH,CADqB,EAAtB,CALH,CADF,CADF,CAmBD,C,uBAxDqBP,KAAK,CAACC,S,EA2D9B,GAAM2B,CAAAA,KAAK,CAAG1B,MAAM,CAAC2B,OAAV,mBAAX,CAEA,cAAezB,CAAAA,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\n\nclass Thesaurus extends React.Component {\n  state = {\n    userInput: \"thesaurus\",\n    syn: []\n  };\n\n  handleChange = event => {\n    this.setState({\n      userInput: event.target.value\n    });\n    event.preventDefault();\n  };\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      this.retrieveThesaurus();\n    }\n    // console.log(this.state.syn);\n  };\n\n  retrieveThesaurus = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    API.thesaurus(this.state.userInput).then(res => {\n      this.setState({\n        syn: res.data\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.retrieveThesaurus();\n  }\n\n  render() {\n    return (\n      <Style>\n        <div>\n          <input\n            onKeyPress={this.handleKeyPress}\n            onChange={this.handleChange}\n          ></input>\n          {this.state.syn.map(def => (\n            <div>\n              <h2>{def.meta.id.split(\":\")[0]}</h2>\n\n              {def.meta.syns[0].map(syn => (\n                <p>{syn}</p>\n              ))}\n            </div>\n          ))}\n        </div>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section``;\n\nexport default Thesaurus;\n"]},"metadata":{},"sourceType":"module"}