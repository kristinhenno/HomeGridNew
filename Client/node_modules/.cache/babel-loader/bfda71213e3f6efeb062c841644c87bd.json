{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Preferences.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\nimport googlePic from \"./images/thumbnails/Google.png\";\nimport bingPic from \"./images/thumbnails/Bing.png\";\nimport yahooPic from \"./images/thumbnails/Yahoo.png\";\nimport { getFromStorage } from \"./utils/storage\";\n\nclass Preferences extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userId: \"\",\n      token: \"\",\n      selectedOption: \"\",\n      currentGrid: [],\n      isLoading: false\n    };\n\n    this.handleOptionChange = changeEvent => {\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n      const selection = changeEvent.target.value; // console.log(selection);\n\n      const newGrid = this.state.currentGrid.slice(); //copy the array\n      // console.log(e.currentTarget.dataset.name);\n\n      var i;\n\n      for (i = 0; i < newGrid.length; i++) {\n        if (newGrid[i] === \"Google\" || newGrid[i] === \"Yahoo\" || newGrid[i] === \"Bing\") {\n          // console.log(newGrid[i]);\n          newGrid.splice(i, 1, selection); // console.log(newGrid);\n\n          this.setState({\n            currentGrid: newGrid\n          }); //set the new state\n          // return newGrid;\n        }\n      } // // newGrid[i] = this.state.selectedOption; //execute the manipulations\n      // this.setState({ currentGrid: newGrid }); //set the new state\n      // console.log(this.state.currentGrid);\n\n    };\n\n    this.retrieveGrid = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const id = this.state.userId;\n      API.retrieve(id).then(res => {\n        if (res.data.grid.length > 0) {\n          // console.log(res.data.grid);\n          const gridArray = res.data.grid.map(item => item.widget); // console.log(gridArray);\n\n          this.setState({\n            currentGrid: gridArray,\n            isLoading: false\n          });\n        }\n      });\n    };\n\n    this.verify = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const obj = getFromStorage(\"the_main_app\");\n\n      if (obj && obj.token) {\n        const {\n          token\n        } = obj; // Verify token\n\n        API.verify(token).then(res => {\n          if (res) {\n            // console.log(\"token checked\");\n            // console.log(res);\n            this.setState({\n              token: token,\n              userId: res.data.userId,\n              isLoading: true\n            }); // console.log(\"loggedIn\");\n\n            this.retrieveGrid();\n          } else {\n            this.setState({\n              isLoading: true\n            });\n          }\n        });\n      } else {\n        // console.log(\"no token\");\n        this.setState({\n          isLoading: false,\n          isLoggedIn: false\n        });\n      }\n    };\n\n    this.save = i => {\n      const id = this.state.userId; // console.log(this.state.currentGrid);\n\n      this.setState({\n        selected: \"\",\n        shake: false\n      });\n      let grid = this.state.currentGrid.map(item => {\n        return {\n          widget: item\n        };\n      }); // console.log(grid);\n\n      API.update(id, grid).then(res => {\n        if (res) {\n          // console.log(\"array added\");\n          this.refreshPage();\n        }\n      });\n    };\n  }\n\n  refreshPage() {\n    window.location.reload(false);\n    this.setState({\n      needRefresh: false\n    });\n  }\n\n  componentDidMount() {\n    this.verify();\n  }\n\n  render() {\n    // console.log(this.state.selectedOption);\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"preferencesBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, \"Default Search Engine\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"Google\",\n      name: \"search\",\n      value: \"Google\",\n      onChange: this.handleOptionChange,\n      checked: this.state.selectedOption === \"Google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"Google\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"thumbnail\",\n      src: googlePic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"Yahoo\",\n      name: \"search\",\n      value: \"Yahoo\",\n      onChange: this.handleOptionChange,\n      checked: this.state.selectedOption === \"Yahoo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"Yahoo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"thumbnail\",\n      src: yahooPic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleOptionChange,\n      checked: this.state.selectedOption === \"Bing\",\n      type: \"radio\",\n      name: \"search\",\n      id: \"Bing\",\n      value: \"Bing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"Bing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"thumbnail\",\n      src: bingPic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"save\",\n      onClick: e => this.save(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, \"save\")));\n  }\n\n}\n\nconst Style = styled.section`\n  #Google {\n    position: absolute;\n    margin-left: 2%;\n  }\n  #Bing {\n    position: absolute;\n    margin-left: 2%;\n  }\n  #Yahoo {\n    position: absolute;\n    margin-left: 2%;\n  }\n  .thumbnail {\n    width: 31%;\n    margin-right: 1%;\n    margin-left: 1%;\n  }\n  #preferencesBox {\n    width: 100%;\n    margin-top: 1.2vh;\n    text-align: left;\n  }\n  #text {\n    text-align: left;\n    width: 100%;\n    margin-left: 2%;\n    margin-top: 3%;\n  }\n  #save {\n    border: none;\n    border-radius: 2px;\n    padding: 1% 3%;\n    font-size: 0.9em;\n    /* font-weight: 600; */\n    margin-top: 1%;\n    text-align: right;\n    color: #5f6368;\n    line-height: 16px;\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.2);\n    font-weight: 500;\n    margin-right: 1%;\n    margin-right: 2.1%;\n    float: right;\n  }\n`;\nexport default Preferences;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Preferences.js"],"names":["React","styled","API","googlePic","bingPic","yahooPic","getFromStorage","Preferences","Component","state","userId","token","selectedOption","currentGrid","isLoading","handleOptionChange","changeEvent","setState","target","value","selection","newGrid","slice","i","length","splice","retrieveGrid","preventDefault","id","retrieve","then","res","data","grid","gridArray","map","item","widget","verify","obj","isLoggedIn","save","selected","shake","update","refreshPage","window","location","reload","needRefresh","componentDidMount","render","e","Style","section"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\nimport googlePic from \"./images/thumbnails/Google.png\";\nimport bingPic from \"./images/thumbnails/Bing.png\";\nimport yahooPic from \"./images/thumbnails/Yahoo.png\";\nimport { getFromStorage } from \"./utils/storage\";\n\nclass Preferences extends React.Component {\n  state = {\n    userId: \"\",\n    token: \"\",\n    selectedOption: \"\",\n    currentGrid: [],\n    isLoading: false\n  };\n\n  handleOptionChange = changeEvent => {\n    this.setState({\n      selectedOption: changeEvent.target.value\n    });\n    const selection = changeEvent.target.value;\n    // console.log(selection);\n    const newGrid = this.state.currentGrid.slice(); //copy the array\n    // console.log(e.currentTarget.dataset.name);\n\n    var i;\n    for (i = 0; i < newGrid.length; i++) {\n      if (\n        newGrid[i] === \"Google\" ||\n        newGrid[i] === \"Yahoo\" ||\n        newGrid[i] === \"Bing\"\n      ) {\n        // console.log(newGrid[i]);\n        newGrid.splice(i, 1, selection);\n        // console.log(newGrid);\n        this.setState({ currentGrid: newGrid }); //set the new state\n        // return newGrid;\n      }\n    }\n\n    // // newGrid[i] = this.state.selectedOption; //execute the manipulations\n    // this.setState({ currentGrid: newGrid }); //set the new state\n    // console.log(this.state.currentGrid);\n  };\n\n  retrieveGrid = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const id = this.state.userId;\n    API.retrieve(id).then(res => {\n      if (res.data.grid.length > 0) {\n        // console.log(res.data.grid);\n        const gridArray = res.data.grid.map(\n          item => item.widget\n        );\n        // console.log(gridArray);\n        this.setState({\n          currentGrid: gridArray,\n          isLoading: false\n        });\n      }\n    });\n  };\n\n  verify = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const obj = getFromStorage(\"the_main_app\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify token\n      API.verify(token).then(res => {\n        if (res) {\n          // console.log(\"token checked\");\n          // console.log(res);\n          this.setState({\n            token: token,\n            userId: res.data.userId,\n            isLoading: true\n          });\n          // console.log(\"loggedIn\");\n          this.retrieveGrid();\n        } else {\n          this.setState({\n            isLoading: true\n          });\n        }\n      });\n    } else {\n      // console.log(\"no token\");\n      this.setState({\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n  };\n\n  //   test = test => {\n  //     console.log(this.state.currentGrid);\n  //   };\n\n  save = i => {\n    const id = this.state.userId;\n    // console.log(this.state.currentGrid);\n\n    this.setState({ selected: \"\", shake: false });\n\n    let grid = this.state.currentGrid.map(item => {\n      return { widget: item };\n    });\n    // console.log(grid);\n\n    API.update(id, grid).then(res => {\n      if (res) {\n        // console.log(\"array added\");\n        this.refreshPage();\n      }\n    });\n  };\n  refreshPage() {\n    window.location.reload(false);\n    this.setState({\n      needRefresh: false\n    });\n  }\n\n  componentDidMount() {\n    this.verify();\n  }\n\n  render() {\n    // console.log(this.state.selectedOption);\n    return (\n      <Style>\n        <div id=\"preferencesBox\">\n          <p id=\"text\">Default Search Engine</p>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"Google\"\n              name=\"search\"\n              value=\"Google\"\n              onChange={this.handleOptionChange}\n              checked={\n                this.state.selectedOption === \"Google\"\n              }\n            />\n            <label for=\"Google\">\n              <img className=\"thumbnail\" src={googlePic} />\n            </label>\n            <input\n              type=\"radio\"\n              id=\"Yahoo\"\n              name=\"search\"\n              value=\"Yahoo\"\n              onChange={this.handleOptionChange}\n              checked={\n                this.state.selectedOption === \"Yahoo\"\n              }\n            />\n\n            <label for=\"Yahoo\">\n              <img className=\"thumbnail\" src={yahooPic} />\n            </label>\n            <input\n              onChange={this.handleOptionChange}\n              checked={this.state.selectedOption === \"Bing\"}\n              type=\"radio\"\n              name=\"search\"\n              id=\"Bing\"\n              value=\"Bing\"\n            />\n            <label for=\"Bing\">\n              <img className=\"thumbnail\" src={bingPic} />\n            </label>\n          </div>\n          <button id=\"save\" onClick={e => this.save()}>\n            save\n          </button>\n        </div>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n  #Google {\n    position: absolute;\n    margin-left: 2%;\n  }\n  #Bing {\n    position: absolute;\n    margin-left: 2%;\n  }\n  #Yahoo {\n    position: absolute;\n    margin-left: 2%;\n  }\n  .thumbnail {\n    width: 31%;\n    margin-right: 1%;\n    margin-left: 1%;\n  }\n  #preferencesBox {\n    width: 100%;\n    margin-top: 1.2vh;\n    text-align: left;\n  }\n  #text {\n    text-align: left;\n    width: 100%;\n    margin-left: 2%;\n    margin-top: 3%;\n  }\n  #save {\n    border: none;\n    border-radius: 2px;\n    padding: 1% 3%;\n    font-size: 0.9em;\n    /* font-weight: 600; */\n    margin-top: 1%;\n    text-align: right;\n    color: #5f6368;\n    line-height: 16px;\n    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.2);\n    font-weight: 500;\n    margin-right: 1%;\n    margin-right: 2.1%;\n    float: right;\n  }\n`;\n\nexport default Preferences;\n"]},"metadata":{},"sourceType":"module"}