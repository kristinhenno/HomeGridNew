{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  getYelpSearch: function (userinputTerm, userinputCity) {\n    return axios.get(\"/yelp/\" + userinputTerm + \"/\" + userinputCity);\n  },\n  getStocks: function () {\n    return axios.get(\"/stocks/\");\n  },\n  createUser: function (user) {\n    return axios.post(\"http://localhost:8080/users/add\", user);\n  },\n  scrapeFox: function () {\n    return axios.get(\"/scrape/fox\");\n  },\n  scrape: function () {\n    return axios.get(\"/scrape/\");\n  },\n  scrapeNpr: function () {\n    return axios.get(\"/scrape/npr\");\n  },\n  updateStocksMongo: function (id, stocks) {\n    return axios.post(\"http://localhost:8080/stocks/updatestocks/\" + id, stocks);\n  },\n  login: function (user) {\n    return axios.post(\"http://localhost:8080/users/login\", user);\n  },\n  retrieve: function (id) {\n    return axios.get(\"http://localhost:8080/users/\" + id);\n  },\n  update: function (id, grid) {\n    return axios.post(\"http://localhost:8080/users/update/\" + id, grid);\n  },\n  updatelist: function (id, grid) {\n    return axios.post(\"http://localhost:8080/users/updatelist/\" + id, grid);\n  },\n  logout: function (token) {\n    return axios.get(\"http://localhost:8080/users/logout?token=\" + token);\n  },\n  verify: function (token) {\n    return axios.get(\"http://localhost:8080/users/verify?token=\" + token);\n  },\n  getCurrentWeather: function (userInput) {\n    return axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\" + userInput + \"&units=imperial&APPID=e0bcadb175fe4fad12041d2069d72cca\");\n  },\n  getWeeklyWeather: function (userInput) {\n    return axios.get(\"https://api.openweathermap.org/data/2.5/forecast/daily?q=\" + userInput + \"&cnt=7&units=imperial&appid=e0bcadb175fe4fad12041d2069d72cca\");\n  },\n  getGifs: function (userinput) {\n    return axios.get(\"https://api.giphy.com/v1/gifs/search?q=\" + userinput + \"&api_key=8ea55db6d2b0486693bb304e07aaa123&limit=100\");\n  },\n  getDailyWeather: function (userInput) {\n    return axios.get(\"https://api.openweathermap.org/data/2.5/forecast?q=\" + userInput + \"&units=imperial&appid=e0bcadb175fe4fad12041d2069d72cca\");\n  },\n  dictionary: function (userInput) {\n    return axios.get(\"https://dictionaryapi.com/api/v3/references/collegiate/json/\" + userInput + \"?key=03b27f05-4a38-4a74-a03d-8a5fb5336eb9\");\n  },\n  thesaurus: function (userInput) {\n    return axios.get(\"https://dictionaryapi.com/api/v3/references/thesaurus/json/\" + userInput + \"?key=cb770d03-269a-4433-b83a-9235dd52360d\");\n  },\n  wod: function () {\n    return axios.get('https://wordsapiv1.p.rapidapi.com/words/', {\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"436c924777msh5aa134b4501dad0p1ed1bajsne83bee16227c\",\n        \"useQueryString\": true\n      },\n      params: {\n        \"random\": \"true\",\n        \"soundsMin\": \"8\",\n        \"hasDetails\": \"examples\"\n      }\n    });\n  },\n  updateStocks: function () {\n    return axios.get('https://finnhub.io/api/v1/forex/symbol?exchange=US&token=bt1ciff48v6qjjkjlc50');\n  },\n  getEx: function (word) {\n    return axios.get('https://wordsapiv1.p.rapidapi.com/words/' + word + '/examples', {\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"436c924777msh5aa134b4501dad0p1ed1bajsne83bee16227c\",\n        \"useQueryString\": true\n      },\n      params: {\n        \"random\": \"true\",\n        \"soundsMin\": \"8\",\n        \"hasDetails\": \"partOfSpeech\"\n      }\n    });\n  },\n  getDailyStocks: function (symbol) {\n    return axios.get('https://alpha-vantage.p.rapidapi.com/query', {\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"alpha-vantage.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"436c924777msh5aa134b4501dad0p1ed1bajsne83bee16227c\",\n        \"useQueryString\": true\n      },\n      params: {\n        \"outputsize\": \"compact\",\n        \"datatype\": \"json\",\n        \"function\": \"TIME_SERIES_DAILY\",\n        \"symbol\": symbol\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/utils/API.js"],"names":["axios","getYelpSearch","userinputTerm","userinputCity","get","getStocks","createUser","user","post","scrapeFox","scrape","scrapeNpr","updateStocksMongo","id","stocks","login","retrieve","update","grid","updatelist","logout","token","verify","getCurrentWeather","userInput","getWeeklyWeather","getGifs","userinput","getDailyWeather","dictionary","thesaurus","wod","headers","params","updateStocks","getEx","word","getDailyStocks","symbol"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getYelpSearch: function(userinputTerm, userinputCity) {\n    return axios.get(\"/yelp/\" + userinputTerm + \"/\" + userinputCity);\n  },\n  getStocks: function() {\n    return axios.get(\"/stocks/\");\n  },\n\n  createUser: function(user) {\n    return axios.post(\"http://localhost:8080/users/add\", user);\n  },\n  scrapeFox: function(){\n  \treturn axios.get(\"/scrape/fox\");\n  },\n  scrape: function() {\n    return axios.get(\"/scrape/\");\n  },\n  scrapeNpr: function(){\n  \treturn axios.get(\"/scrape/npr\");\n  },\n\n  updateStocksMongo: function(id, stocks) {\n    return axios.post(\"http://localhost:8080/stocks/updatestocks/\" + id, stocks);\n  },\n\n  login: function(user) {\n    return axios.post(\"http://localhost:8080/users/login\", user);\n  },\n  retrieve: function(id) {\n    return axios.get(\"http://localhost:8080/users/\" + id);\n  },\n  update: function(id, grid) {\n    return axios.post(\"http://localhost:8080/users/update/\" + id, grid);\n  },\n  updatelist: function(id, grid) {\n    return axios.post(\"http://localhost:8080/users/updatelist/\" + id, grid);\n  },\n  logout: function(token) {\n    return axios.get(\"http://localhost:8080/users/logout?token=\" + token);\n  },\n  verify: function(token) {\n    return axios.get(\"http://localhost:8080/users/verify?token=\" + token);\n  },\n\n  getCurrentWeather: function(userInput) {\n    return axios.get(\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n        userInput +\n        \"&units=imperial&APPID=e0bcadb175fe4fad12041d2069d72cca\"\n    );\n  },\n\n  getWeeklyWeather: function(userInput) {\n    return axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast/daily?q=\" +\n        userInput +\n        \"&cnt=7&units=imperial&appid=e0bcadb175fe4fad12041d2069d72cca\"\n    );\n  },\n  getGifs: function(userinput){\n    return axios.get(\"https://api.giphy.com/v1/gifs/search?q=\" + userinput + \"&api_key=8ea55db6d2b0486693bb304e07aaa123&limit=100\")\n  },\n  getDailyWeather: function(userInput) {\n    return axios.get(\n      \"https://api.openweathermap.org/data/2.5/forecast?q=\" +\n        userInput +\n        \"&units=imperial&appid=e0bcadb175fe4fad12041d2069d72cca\"\n    );\n  },\n  dictionary: function(userInput) {\n    return axios.get(\n      \"https://dictionaryapi.com/api/v3/references/collegiate/json/\" +\n        userInput +\n        \"?key=03b27f05-4a38-4a74-a03d-8a5fb5336eb9\"\n    );\n  },\n  thesaurus: function(userInput) {\n    return axios.get(\n      \"https://dictionaryapi.com/api/v3/references/thesaurus/json/\" +\n        userInput +\n        \"?key=cb770d03-269a-4433-b83a-9235dd52360d\"\n    );\n  },\n\n\nwod: function(){\nreturn  axios.get(\n  'https://wordsapiv1.p.rapidapi.com/words/', \n  {\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"436c924777msh5aa134b4501dad0p1ed1bajsne83bee16227c\",\n        \"useQueryString\": true\n      }, \n      params:{\n        \"random\":\"true\",\n        \"soundsMin\":\"8\",\n        \"hasDetails\" : \"examples\"\n\n\n        }\n    });\n  \n  },\n\n  updateStocks: function(){\n    return  axios.get(\n      'https://finnhub.io/api/v1/forex/symbol?exchange=US&token=bt1ciff48v6qjjkjlc50'\n        );\n      \n      },\n      \n  getEx: function(word){\n    return  axios.get(\n      'https://wordsapiv1.p.rapidapi.com/words/' + word + '/examples', \n      {\n          headers: {\n            \"content-type\": \"application/octet-stream\",\n            \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"436c924777msh5aa134b4501dad0p1ed1bajsne83bee16227c\",\n            \"useQueryString\": true\n          }, \n          params:{\n            \"random\":\"true\",\n            \"soundsMin\":\"8\",\n            \"hasDetails\": \"partOfSpeech\"\n\n            }\n        });\n      \n      },\n\n      getDailyStocks: function (symbol){\n        return axios.get('https://alpha-vantage.p.rapidapi.com/query',\n{\n        headers: {\n          \"content-type\":\"application/octet-stream\",\n          \"x-rapidapi-host\":\"alpha-vantage.p.rapidapi.com\",\n          \"x-rapidapi-key\":\"436c924777msh5aa134b4501dad0p1ed1bajsne83bee16227c\",\n          \"useQueryString\":true\n          },\n          params: {\n          \"outputsize\":\"compact\",\n          \"datatype\":\"json\",\n          \"function\":\"TIME_SERIES_DAILY\",\n          \"symbol\": symbol\n          }\n        }\n          \n        )\n      }\n};\n"]},"metadata":{},"sourceType":"module"}