{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/Payment.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\nimport { getFromStorage, setInStorage } from \"./utils/storage\";\nexport default function Payment() {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  const obj = getFromStorage(\"the_main_app\");\n  const [user, setUser] = useState('');\n  useEffect(() => {\n    if (obj) {\n      setUser(obj.user);\n    } // Create PaymentIntent as soon as the page loads\n\n\n    window.fetch(\"/stripe/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: [{\n          id: \"homegrid\",\n          price: 5,\n          quantity: 1\n        }]\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setClientSecret(data.clientSecret);\n    });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const signUp = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    API.createUser(user).then(res => {\n      API.login(user).then(res => {\n        if (res.data.success) {\n          setInStorage(\"the_main_app\", {\n            token: res.data.token\n          });\n          refreshPage();\n        }\n\n        ;\n      });\n    });\n  };\n\n  const refreshPage = () => {\n    window.location.reload(false);\n    this.setState({\n      needRefresh: false\n    });\n  };\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Style, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 1\n    }\n  }, !succeeded ? /*#__PURE__*/React.createElement(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    id: \"card-element\",\n    options: cardStyle,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => {\n      signUp();\n    },\n    disabled: processing || disabled || succeeded,\n    id: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, processing ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spinner\",\n    id: \"spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }) : \"Sign Up $5\")), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-error\",\n    role: \"alert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, error)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), succeeded ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 34\n    }\n  })));\n}\nconst Style = styled.section`\n#root {\n  display: flex;\n  align-items: center;\n}\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  height: 100vh;\n  width: 100vw;\n}\nform {\n  width: 81%;\n  align-self: center;\n  border-radius: 7px;\n  padding: 40px;\n}\ninput {\n  border-radius: 6px;\n  margin-bottom: 6px;\n  padding: 12px;\n  border: 1px solid rgba(50, 50, 93, 0.1);\n  max-height: 44px;\n  font-size: 16px;\n  width: 100%;\n  background: white;\n  box-sizing: border-box;\n}\n.result-message {\n  line-height: 22px;\n  font-size: 16px;\n}\n.result-message a {\n  color: rgb(89, 111, 214);\n  font-weight: 600;\n  text-decoration: none;\n}\n.hidden {\n  display: none;\n}\n#card-error {\n  color: rgb(105, 115, 134);\n  font-size: 16px;\n  line-height: 20px;\n  margin-top: 12px;\n  text-align: center;\n}\n#card-element {\n  border-radius: 4px 4px 0 0;\n  padding: 12px;\n  border: 1px solid rgba(50, 50, 93, 0.1);\n  max-height: 44px;\n  width: 100%;\n  background: white;\n  box-sizing: border-box;\n}\n#payment-request-button {\n  margin-bottom: 32px;\n}\n/* Buttons and links */\nbutton {\n  background: #5469d4;\n  font-family: Arial, sans-serif;\n  color: #ffffff;\n  border-radius: 0 0 4px 4px;\n  border: 0;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  display: block;\n  transition: all 0.2s ease;\n  box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n  width: 100%;\n}\nbutton:hover {\n  filter: contrast(115%);\n}\nbutton:disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n/* spinner/processing state, errors */\n.spinner,\n.spinner:before,\n.spinner:after {\n  border-radius: 50%;\n}\n.spinner {\n  color: #ffffff;\n  font-size: 22px;\n  text-indent: -99999px;\n  margin: 0px auto;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  box-shadow: inset 0 0 0 2px;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n.spinner:before,\n.spinner:after {\n  position: absolute;\n  content: \"\";\n}\n.spinner:before {\n  width: 10.4px;\n  height: 20.4px;\n  background: #5469d4;\n  border-radius: 20.4px 0 0 20.4px;\n  top: -0.2px;\n  left: -0.2px;\n  -webkit-transform-origin: 10.4px 10.2px;\n  transform-origin: 10.4px 10.2px;\n  -webkit-animation: loading 2s infinite ease 1.5s;\n  animation: loading 2s infinite ease 1.5s;\n}\n.spinner:after {\n  width: 10.4px;\n  height: 10.2px;\n  background: #5469d4;\n  border-radius: 0 10.2px 10.2px 0;\n  top: -0.1px;\n  left: 10.2px;\n  -webkit-transform-origin: 0px 10.2px;\n  transform-origin: 0px 10.2px;\n  -webkit-animation: loading 2s infinite ease;\n  animation: loading 2s infinite ease;\n}\n@keyframes loading {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@media only screen and (max-width: 600px) {\n  form {\n    width: 80vw;\n  }\n}\n`;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/Payment.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","styled","API","getFromStorage","setInStorage","Payment","succeeded","setSucceeded","error","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","elements","obj","user","setUser","window","fetch","method","headers","body","JSON","stringify","items","id","price","quantity","then","res","json","data","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","signUp","i","preventDefault","createUser","login","success","token","refreshPage","location","reload","setState","needRefresh","handleChange","event","empty","message","handleSubmit","ev","payload","confirmCardPayment","payment_method","card","getElement","e","Style","section"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\nimport {\n  getFromStorage,\n  setInStorage\n} from \"./utils/storage\";\n\nexport default function Payment() {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n  const obj = getFromStorage(\"the_main_app\");\n  const [user, setUser] = useState('');\n\n\n  \n  useEffect(() => {\n    if (obj){\n      setUser(obj.user);\n    }\n    \n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(\"/stripe/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({items: [{ id: \"homegrid\", price: 5, quantity: 1 }]})\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  \n  const signUp = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    API.createUser(user).then(res => {\n      \n      \n        API.login(user)\n          .then(res => {\n       \n            if (res.data.success) {\n              setInStorage(\"the_main_app\", {\n                token: res.data.token\n              });\n              refreshPage();\n  };\n\n})\n  })\n}\n  \n  const refreshPage = () => {\n    window.location.reload(false);\n    this.setState({\n      needRefresh: false\n    });\n  }\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    \n    }\n  };\n\n  return (\n    <Style>\n<div>\n  { !succeeded ? \n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n      <button onClick={e=>{\n              signUp();\n         \n            }}\n        disabled={processing || disabled || succeeded}\n        id=\"submit\"\n      >\n        <span id=\"button-text\">\n          {processing ? (\n            <div className=\"spinner\" id=\"spinner\"></div>\n          ) : ( \n            \"Sign Up $5\"\n          )}\n        </span>\n      </button>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      </form> : <div></div>\n  \n}\n      {succeeded ? <div></div> : <div></div>}\n\n      </div>\n      </Style>\n\n  );\n}\n\nconst Style = styled.section`\n#root {\n  display: flex;\n  align-items: center;\n}\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, sans-serif;\n  font-size: 16px;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  height: 100vh;\n  width: 100vw;\n}\nform {\n  width: 81%;\n  align-self: center;\n  border-radius: 7px;\n  padding: 40px;\n}\ninput {\n  border-radius: 6px;\n  margin-bottom: 6px;\n  padding: 12px;\n  border: 1px solid rgba(50, 50, 93, 0.1);\n  max-height: 44px;\n  font-size: 16px;\n  width: 100%;\n  background: white;\n  box-sizing: border-box;\n}\n.result-message {\n  line-height: 22px;\n  font-size: 16px;\n}\n.result-message a {\n  color: rgb(89, 111, 214);\n  font-weight: 600;\n  text-decoration: none;\n}\n.hidden {\n  display: none;\n}\n#card-error {\n  color: rgb(105, 115, 134);\n  font-size: 16px;\n  line-height: 20px;\n  margin-top: 12px;\n  text-align: center;\n}\n#card-element {\n  border-radius: 4px 4px 0 0;\n  padding: 12px;\n  border: 1px solid rgba(50, 50, 93, 0.1);\n  max-height: 44px;\n  width: 100%;\n  background: white;\n  box-sizing: border-box;\n}\n#payment-request-button {\n  margin-bottom: 32px;\n}\n/* Buttons and links */\nbutton {\n  background: #5469d4;\n  font-family: Arial, sans-serif;\n  color: #ffffff;\n  border-radius: 0 0 4px 4px;\n  border: 0;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  display: block;\n  transition: all 0.2s ease;\n  box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);\n  width: 100%;\n}\nbutton:hover {\n  filter: contrast(115%);\n}\nbutton:disabled {\n  opacity: 0.5;\n  cursor: default;\n}\n/* spinner/processing state, errors */\n.spinner,\n.spinner:before,\n.spinner:after {\n  border-radius: 50%;\n}\n.spinner {\n  color: #ffffff;\n  font-size: 22px;\n  text-indent: -99999px;\n  margin: 0px auto;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  box-shadow: inset 0 0 0 2px;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n}\n.spinner:before,\n.spinner:after {\n  position: absolute;\n  content: \"\";\n}\n.spinner:before {\n  width: 10.4px;\n  height: 20.4px;\n  background: #5469d4;\n  border-radius: 20.4px 0 0 20.4px;\n  top: -0.2px;\n  left: -0.2px;\n  -webkit-transform-origin: 10.4px 10.2px;\n  transform-origin: 10.4px 10.2px;\n  -webkit-animation: loading 2s infinite ease 1.5s;\n  animation: loading 2s infinite ease 1.5s;\n}\n.spinner:after {\n  width: 10.4px;\n  height: 10.2px;\n  background: #5469d4;\n  border-radius: 0 10.2px 10.2px 0;\n  top: -0.1px;\n  left: 10.2px;\n  -webkit-transform-origin: 0px 10.2px;\n  transform-origin: 0px 10.2px;\n  -webkit-animation: loading 2s infinite ease;\n  animation: loading 2s infinite ease;\n}\n@keyframes loading {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@media only screen and (max-width: 600px) {\n  form {\n    width: 80vw;\n  }\n}\n`;"]},"metadata":{},"sourceType":"module"}