{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/MapBuilder.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer, DirectionsService, Marker } from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport styled from \"styled-components\";\nGeocode.setApiKey(\"AIzaSyCwpDhxfo8aygIX4ZrfdC4NULGK8KKteVc\");\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.enableDebug();\nconst google = window.google;\n\nclass MapBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: null,\n      currentLat: 34.4253876,\n      currentLong: -119.7045534,\n      destination: \"\",\n      destinationLat: 0,\n      destinationLong: 0,\n      startLat: 0,\n      startLong: 0,\n      start: \"\",\n      directions: [],\n      searched: false,\n      loaded: false,\n      userInput: \"\",\n      userDestination: \"\",\n      show: false\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.handleChangeDest = event => {\n      this.setState({\n        userDestination: event.target.value\n      });\n    };\n\n    this.GoogleMapExample = withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n      yesIWantToUseGoogleMapApiInternals: true,\n      defaultOptions: {\n        mapTypeControl: false,\n        streetViewControl: false,\n        fullscreenControl: false\n      },\n      center: this.state.startLat === 0 ? {\n        lat: this.state.currentLat,\n        lng: this.state.currentLong\n      } : {\n        lat: this.state.startLat,\n        lng: this.state.startLong\n      },\n      defaultZoom: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      panel: document.getElementById('panel'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    })));\n\n    this.getCoords = () => {\n      Geocode.fromAddress(this.state.destination).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          destinationLat: lat,\n          destinationLong: lng\n        });\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.getCoordsStart = () => {\n      Geocode.fromAddress(this.state.start).then(response => {\n        const {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          startLat: lat,\n          startLong: lng\n        });\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.getDirections = () => {\n      const directionsService = new google.maps.DirectionsService();\n      const origin = {\n        lat: this.state.startLat,\n        lng: this.state.startLong\n      };\n      const destination = {\n        lat: this.state.destinationLat,\n        lng: this.state.destinationLong\n      };\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          console.log(result);\n          this.setState({\n            directions: result,\n            searched: true\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let currentComponent = this;\n\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var lat = position.coords.latitude;\n        var long = position.coords.longitude;\n        console.log(position);\n        currentComponent.setState({\n          currentLat: lat,\n          currentLong: long\n        });\n      });\n    } else {\n      console.log(\"Not Available\");\n    }\n  }\n\n  render() {\n    console.log(this.state.start);\n    console.log(this.state.startLat);\n    console.log(this.state.startLong);\n    console.log(this.state.show);\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(this.GoogleMapExample, {\n      panel: document.getElementById('panel'),\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `32.33vh;`,\n          width: \"99%\",\n          borderRadius: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 29\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `32.33vh`,\n          borderRadius: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"start\",\n      style: {\n        width: '40%'\n      },\n      onPlaceSelected: place => {\n        console.log(place);\n        this.setState({\n          start: place.formatted_address,\n          userInput: place.formatted_address\n        }, () => {\n          this.getCoordsStart();\n        });\n      },\n      types: ['address'],\n      componentRestrictions: {\n        country: \"us\"\n      },\n      value: this.state.userInput,\n      placeholder: \"From\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"destination\",\n      style: {\n        width: '40%'\n      },\n      onPlaceSelected: place => {\n        this.setState({\n          destination: place.formatted_address,\n          userDestination: place.formatted_address\n        }, () => {\n          this.getCoords();\n        });\n      },\n      types: ['establishment'],\n      componentRestrictions: {\n        country: \"us\"\n      },\n      placeholder: \"To\",\n      onChange: this.handleChangeDest,\n      value: this.state.userDestination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.show ? \"showPan\" : \"dontShow\",\n      id: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 1\n      }\n    }), this.state.searched ? /*#__PURE__*/React.createElement(\"p\", {\n      onClick: () => this.setState({\n        show: true\n      }),\n      id: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 24\n      }\n    }, \"\\u2B05\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 96\n      }\n    }), this.state.show ? /*#__PURE__*/React.createElement(\"p\", {\n      onClick: () => this.setState({\n        show: false\n      }),\n      id: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 20\n      }\n    }, \"\\u27A1\") : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 93\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"search\",\n      onClick: () => this.getDirections(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 1\n      }\n    }, \"Route\")));\n  }\n\n}\n\nconst Style = styled.section`\n.dontShow{\ndisplay:none;}\n\n#start{\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n  width: 50%;\n  border: 0;\n    margin-top: 1.5%;\n    margin-left: 1.5%;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n}\n\n#start:focus{\noutline:none;\n}\n\n#destination:focus{\n  outline:none;\n  }\n  \n#destination{\n  margin-left: 1.5%;\n  position: absolute;\n  top: 20px;\n  left: 0;\n  z-index: 5;\n  width: 50%;\n  border: 0;\n    margin-top: 1.5%;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n}\n\n#search{\n  position: absolute;\n  top: 47px;\n  margin-left: 1.5%;\n  background-color: #5083d4;\n  border: 0;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n  color: white;\n  font-weight: 900;\n}\n\n#search:hover{\n  cursor: pointer\n}\n\n#search:focus{\n  outline: none;\n}\n\n#panel{\n  position: absolute;\n    direction: ltr;\n    width: 50%;\n    top: 0;\n    background-color: white;\n    right: 0;\n    height: 32.33vh;\n    overflow: scroll;\n    font-size: 0.7em;\n    margin-right: 1%;\n}\n\n.adp-marker2{\n\n  height: 3vh;\n\n}\n\n#arrow{\n  background-color: #5083d4;\n  color: white;\n  position: absolute;\n  top: 0;\n  right: 0;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n  padding: 1%;\n  margin-right: 1%;\n}\n\n#arrow:hover{\n  cursor: pointer\n}\n`;\nexport default MapBuilder;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/MapBuilder.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","DirectionsService","Marker","Autocomplete","Geocode","styled","setApiKey","setLanguage","setRegion","enableDebug","google","window","MapBuilder","state","directions","currentLat","currentLong","destination","destinationLat","destinationLong","startLat","startLong","start","searched","loaded","userInput","userDestination","show","handleChange","event","setState","target","value","handleChangeDest","GoogleMapExample","props","mapTypeControl","streetViewControl","fullscreenControl","lat","lng","document","getElementById","getCoords","fromAddress","then","response","results","geometry","location","error","console","getCoordsStart","getDirections","directionsService","maps","origin","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","log","componentDidMount","currentComponent","navigator","geolocation","getCurrentPosition","position","coords","latitude","long","longitude","render","height","width","borderRadius","place","formatted_address","country","Style","section"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer,\n  DirectionsService,\n  Marker\n} from \"react-google-maps\";\nimport Autocomplete from 'react-google-autocomplete';\nimport Geocode from \"react-geocode\";\nimport styled from \"styled-components\";\nGeocode.setApiKey(\"AIzaSyCwpDhxfo8aygIX4ZrfdC4NULGK8KKteVc\");\nGeocode.setLanguage(\"en\");\nGeocode.setRegion(\"us\");\nGeocode.enableDebug();\n\n\nconst google = window.google;\n\nclass MapBuilder extends Component {\n  \n  state = {\n    directions: null,\n    currentLat: 34.4253876,\n    currentLong:-119.7045534,\n    destination: \"\",\n    destinationLat: 0,\n    destinationLong: 0,\n    startLat: 0, \n    startLong: 0, \n    start: \"\", \n    directions: [], \n    searched:false, \n    loaded: false,\n    userInput: \"\",\n    userDestination: \"\", \n    show: false\n\n  };\n\n  handleChange = event => {\n    this.setState({ userInput: event.target.value });\n  };\n\n  handleChangeDest = event => {\n    this.setState({ userDestination: event.target.value });\n  };\n\n\n  GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n      yesIWantToUseGoogleMapApiInternals\n      defaultOptions={{mapTypeControl: false, streetViewControl: false, fullscreenControl: false}}\n    center={ this.state.startLat === 0 ?  { lat: this.state.currentLat, lng: this.state.currentLong } : { lat: this.state.startLat, lng: this.state.startLong }}\n        defaultZoom={9}\n       \n      >\n        \n        <DirectionsRenderer\n          directions={this.state.directions}\n          panel={ document.getElementById('panel') }\n        />\n      </GoogleMap> \n     ));\n\n\n  getCoords = () => {\n    \n    Geocode.fromAddress(this.state.destination).then(\n    response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this.setState({\n        destinationLat: lat,\n        destinationLong: lng\n      })\n    },\n    error => {\n      console.error(error);\n    }\n  );\n  }\n\n  getCoordsStart = () => {\n    \n    Geocode.fromAddress(this.state.start).then(\n    response => {\n      const { lat, lng } = response.results[0].geometry.location;\n      this.setState({\n       startLat: lat,\n        startLong: lng\n      })\n    },\n    error => {\n      console.error(error);\n    }\n  );\n  }\n\n  getDirections =() => {\n        \n    const directionsService = new google.maps.DirectionsService();\n\n\n\n\n    const origin = { lat: this.state.startLat, lng: this.state.startLong };\n    const destination = { lat: this.state.destinationLat, lng: this.state.destinationLong };\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          console.log(result);\n          this.setState({\n            directions: result, \n            searched: true,\n\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n\n \n\n componentDidMount() {\n  let currentComponent = this;\n\n  if (\"geolocation\" in navigator) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n\n      var lat = position.coords.latitude;\n      var long = position.coords.longitude;\n\n      console.log(position);\n\n      currentComponent.setState({\n        currentLat: lat,\n        currentLong: long\n      });\n\n    });\n  } else {\n    console.log(\"Not Available\");\n  }\n  \n  }\n\n  render() {\n    console.log(this.state.start);\n    console.log(this.state.startLat);\n    console.log(this.state.startLong);\n    console.log(this.state.show);\n\n    return (\n      \n      <Style>\n      <div>\n        <this.GoogleMapExample\n         panel={ document.getElementById('panel') }\n          containerElement={<div style={{ height: `32.33vh;`, width: \"99%\", borderRadius: \"15px\" }} />}\n          mapElement={<div style={{ height: `32.33vh`, borderRadius: \"15px\"  }} />}\n        />\n\n\n\n\n        <Autocomplete id=\"start\"\n    style={{width: '40%'}}\n    onPlaceSelected={(place) => {\n      console.log(place);\n      this.setState({\n        start: place.formatted_address,\n        userInput: place.formatted_address\n      } , ()=> {this.getCoordsStart()})\n    }}\n    types={['address']}\n    componentRestrictions={{country: \"us\"}}\n    value={this.state.userInput}\n    placeholder=\"From\"\n    onChange={this.handleChange}\n\n/>\n        <Autocomplete id=\"destination\"\n    style={{width: '40%'}}\n    onPlaceSelected={(place) => {\n      this.setState({\n        destination: place.formatted_address,\n        userDestination: place.formatted_address\n      } , ()=> {this.getCoords()})\n    }}\n    types={['establishment']}\n    componentRestrictions={{country: \"us\"}}\n  \n    placeholder=\"To\"\n    onChange={this.handleChangeDest}\n    value={this.state.userDestination}\n/>\n\n<div className={this.state.show ? \"showPan\" : \"dontShow\"} id=\"panel\"></div> \n\n{this.state.searched ? <p onClick={()=> this.setState({show: true})} id=\"arrow\">&#x2B05;</p> : <p></p>}\n\n{this.state.show ? <p onClick={()=> this.setState({show: false})} id=\"arrow\">&#x27A1;</p> : <p></p>}\n\n\n<button id=\"search\" onClick={() => this.getDirections()}>Route</button>\n        {/* {this.state.currentLat != 0 ?  <Marker \n      position={{ lat: this.state.currentLat, lng: this.state.currentLong }}\n    /> : <p></p> } */}\n      </div>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n.dontShow{\ndisplay:none;}\n\n#start{\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 5;\n  width: 50%;\n  border: 0;\n    margin-top: 1.5%;\n    margin-left: 1.5%;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n}\n\n#start:focus{\noutline:none;\n}\n\n#destination:focus{\n  outline:none;\n  }\n  \n#destination{\n  margin-left: 1.5%;\n  position: absolute;\n  top: 20px;\n  left: 0;\n  z-index: 5;\n  width: 50%;\n  border: 0;\n    margin-top: 1.5%;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n}\n\n#search{\n  position: absolute;\n  top: 47px;\n  margin-left: 1.5%;\n  background-color: #5083d4;\n  border: 0;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n  color: white;\n  font-weight: 900;\n}\n\n#search:hover{\n  cursor: pointer\n}\n\n#search:focus{\n  outline: none;\n}\n\n#panel{\n  position: absolute;\n    direction: ltr;\n    width: 50%;\n    top: 0;\n    background-color: white;\n    right: 0;\n    height: 32.33vh;\n    overflow: scroll;\n    font-size: 0.7em;\n    margin-right: 1%;\n}\n\n.adp-marker2{\n\n  height: 3vh;\n\n}\n\n#arrow{\n  background-color: #5083d4;\n  color: white;\n  position: absolute;\n  top: 0;\n  right: 0;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2), 0 -1px 0px rgba(0,0,0,0.02);\n  padding: 1%;\n  margin-right: 1%;\n}\n\n#arrow:hover{\n  cursor: pointer\n}\n`;\n\nexport default MapBuilder;\n"]},"metadata":{},"sourceType":"module"}