{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/Grid2.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport MuuriGrid from \"react-muuri\";\nimport Weather from \"./Weather\";\nimport Google from \"./Google\";\nimport Yelp from \"./Yelp\";\nimport Bing from \"./Bing\";\nimport Yahoo from \"./Yahoo\";\nimport Checklist from \"./Checklist\";\nimport Login from \"./Login\";\nimport API from \"./utils/API\";\nimport Words from \"./Words\";\nimport Settings from \"./Settings\";\nimport Stocks from \"./Stocks\";\nimport Gif from \"./Gif\";\nimport News from \"./News\";\nimport Maps from \"./Maps\";\nimport Streaming from \"./Streaming\";\nimport Calculator from \"./Calculator\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { getFromStorage, setInStorage } from \"./utils/storage\";\n\nclass Grid2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      token: \"\",\n      userId: \"\",\n      isLoading: true,\n      grid: [/*#__PURE__*/React.createElement(Yelp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Maps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Gif, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Google, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Streaming, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Calculator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Weather, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Words, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(News, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      })],\n      uerGrid: []\n    };\n\n    this.retrieveGrid = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const id = this.state.userId;\n      API.retrieve(id).then(res => {\n        if (res.data.grid.length > 0) {\n          const gridArray = res.data.grid.map(item => item.widget);\n          const Map = {\n            Yelp: Yelp,\n            Google: Google,\n            Weather: Weather,\n            Login: Login,\n            Settings: Settings,\n            Bing: Bing,\n            Yahoo: Yahoo,\n            Checklist: Checklist,\n            Words: Words,\n            Maps: Maps,\n            Stocks: Stocks,\n            News: News,\n            Gif: Gif,\n            Streaming: Streaming,\n            Calculator: Calculator\n          };\n          const newGridArray = gridArray.map(item => {\n            let Tagname = Map[item];\n            return /*#__PURE__*/React.createElement(Tagname, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 18\n              }\n            });\n          });\n          this.setState({\n            grid: newGridArray,\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            grid: this.state.grid,\n            isLoading: false\n          });\n        }\n      });\n    };\n\n    this.verify = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const obj = getFromStorage(\"the_main_app\");\n\n      if (obj && obj.token) {\n        const {\n          token\n        } = obj; // Verify token\n\n        API.verify(token).then(res => {\n          if (res) {\n            this.setState({\n              token: token,\n              isLoggedIn: true,\n              userId: res.data.userId\n            });\n            this.retrieveGrid();\n          } else {\n            this.setState({\n              isLoading: true\n            });\n          }\n        });\n      } else {\n        this.setState({\n          isLoading: false,\n          isLoggedIn: false\n        });\n      }\n    };\n\n    this.updateGridState = data => {\n      let removed = this.state.grid.splice(data.fromIndex, 1)[0]; // you can remove more than one...\n\n      this.state.grid.splice(data.toIndex, 0, removed);\n      let grid = this.state.grid.map(item => {\n        return {\n          widget: item.type.name\n        };\n      });\n\n      if (this.state.isLoggedIn) {\n        const id = this.state.userId;\n        API.update(id, grid).then(res => {\n          if (res) {}\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.verify();\n    this.grid = new MuuriGrid({\n      node: this.gridElement,\n      defaultOptions: {\n        dragEnabled: true // See Muuri's documentation for other option overrides.\n\n      }\n    }); // set callback on move\n\n    this.grid.getEvent(\"move\", null, null, this.updateGridState);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: gridElement => this.gridElement = gridElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, this.state.isLoading ? this.state.grid.map(components => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"loader\",\n      className: \"item-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(ClipLoader, {\n      size: 50,\n      color: \"#6342f5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 64\n      }\n    })))) : this.state.grid.map(components => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, components))))));\n  }\n\n}\n\nconst Style = styled.section`\n\n#loader{\n  text-align: center;\n  margin-top: 10vh;\n}\n\n  .item {\n    /* color: white; */\n\n    /* height: 200px;\n    margin: 20px; */\n    position: absolute; /* Required by Muuri */\n    /* width: 200px; */\n    width: 33.3%;\n    height: 33.3vh;\n    margin: auto;\n  }\n\n  .item-content {\n    margin-top: 0.6%;\n    margin-left: 0.25%;\n    margin-right: 0.25%;\n  }\n  .google {\n  }\n  .muuri-item-dragging {\n    z-index: 3; /* Required by Muuri */\n  }\n\n  .muuri-item-releasing {\n    z-index: 2; /* Required by Muuri */\n  }\n\n  .muuri-item-hidden {\n    z-index: 0; /* Required by Muuri */\n  }\n\n  .box1 {\n    background-color: lightpink; /* Go */\n  }\n\n  .box2 {\n    background-color: lightblue; /* Gators */\n  }\n\n  @media only screen and (min-width: 0px) and (max-width: 600px) { \n    .item{\n      width: 100%;\n      height: 33.3vh;\n    }\n  \n  }\n`;\nexport default Grid2;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/Grid2.js"],"names":["React","styled","MuuriGrid","Weather","Google","Yelp","Bing","Yahoo","Checklist","Login","API","Words","Settings","Stocks","Gif","News","Maps","Streaming","Calculator","ClipLoader","getFromStorage","setInStorage","Grid2","Component","constructor","props","state","isLoggedIn","token","userId","isLoading","grid","uerGrid","retrieveGrid","i","preventDefault","id","retrieve","then","res","data","length","gridArray","map","item","widget","Map","newGridArray","Tagname","setState","verify","obj","updateGridState","removed","splice","fromIndex","toIndex","type","name","update","componentDidMount","node","gridElement","defaultOptions","dragEnabled","getEvent","render","components","Style","section"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport MuuriGrid from \"react-muuri\";\nimport Weather from \"./Weather\";\nimport Google from \"./Google\";\nimport Yelp from \"./Yelp\";\nimport Bing from \"./Bing\";\nimport Yahoo from \"./Yahoo\";\nimport Checklist from \"./Checklist\";\nimport Login from \"./Login\";\nimport API from \"./utils/API\";\nimport Words from \"./Words\";\nimport Settings from \"./Settings\";\nimport Stocks from \"./Stocks\";\nimport Gif from \"./Gif\";\nimport News from \"./News\";\nimport Maps from \"./Maps\";\nimport Streaming from \"./Streaming\";\nimport Calculator from \"./Calculator\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nimport { getFromStorage, setInStorage } from \"./utils/storage\";\n\nclass Grid2 extends React.Component {\n  state = {\n    isLoggedIn: false,\n    token: \"\",\n    userId: \"\",\n    isLoading: true,\n    grid: [\n      <Yelp />,\n      <Maps />,\n      <Gif />,\n      <Google />,\n      <Streaming />,\n      <Calculator />,\n      <Weather />,\n      <Words />,\n      <News />\n    ],\n    uerGrid: []\n  };\n\n  constructor(props) {\n    super(props);\n  }\n  retrieveGrid = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const id = this.state.userId;\n\n    API.retrieve(id).then(res => {\n      if (res.data.grid.length > 0) {\n       \n        const gridArray = res.data.grid.map(item => item.widget);\n      \n        const Map = {\n          Yelp: Yelp,\n          Google: Google,\n          Weather: Weather,\n          Login: Login,\n          Settings: Settings,\n          Bing: Bing,\n          Yahoo: Yahoo,\n          Checklist: Checklist,\n          Words: Words,\n          Maps: Maps,\n          Stocks: Stocks,\n          News: News,\n          Gif: Gif,\n          Streaming: Streaming,\n          Calculator: Calculator\n     \n\n        };\n        const newGridArray = gridArray.map(item => {\n          let Tagname = Map[item];\n          return <Tagname />;\n        });\n        this.setState({\n          grid: newGridArray,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          grid: this.state.grid,\n          isLoading: false\n        });\n      }\n    });\n  };\n\n  verify = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const obj = getFromStorage(\"the_main_app\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify token\n      API.verify(token).then(res => {\n        if (res) {\n        \n          this.setState({\n            token: token,\n            isLoggedIn: true,\n            userId: res.data.userId\n          });\n     \n          this.retrieveGrid();\n        } else {\n          this.setState({\n            isLoading: true\n          });\n        }\n      });\n    } else {\n    \n      this.setState({\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n  };\n\n  updateGridState = data => {\n\n    let removed = this.state.grid.splice(data.fromIndex, 1)[0]; // you can remove more than one...\n    this.state.grid.splice(data.toIndex, 0, removed);\n\n    let grid = this.state.grid.map(item => {\n      return { widget: item.type.name };\n    });\n \n\n    if (this.state.isLoggedIn) {\n  \n      const id = this.state.userId;\n      API.update(id, grid).then(res => {\n        if (res) {\n     \n        }\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.verify();\n\n    this.grid = new MuuriGrid({\n      node: this.gridElement,\n      defaultOptions: {\n        dragEnabled: true // See Muuri's documentation for other option overrides.\n      }\n    });\n    // set callback on move\n    this.grid.getEvent(\"move\", null, null, this.updateGridState);\n  }\n\n  render() {\n\n    return (\n      <Style>\n        <div>\n          {/* Assign a ref to the grid container so the virtual DOM will ignore it for now (WIP). */}\n\n          <div ref={gridElement => (this.gridElement = gridElement)}>\n            {this.state.isLoading\n              ? this.state.grid.map(components => (\n                  <div className=\"item box\">\n                    <div id=\"loader\" className=\"item-content\"> <ClipLoader\n                          size={50}\n                          color={\"#6342f5\"}\n                        /></div>\n                  </div>\n                ))\n              : this.state.grid.map(components => (\n                  <div className=\"item box\">\n                    <div className=\"item-content\">{components}</div>\n                  </div>\n                ))}\n\n            {/* {this.state.isLoggedIn &&\n            this.state.userGrid.length != undefined\n              ? this.state.userGrid.map(components => (\n                  <div className=\"item box\">\n                    <div className=\"item-content\">\n                      {components}\n                    </div>\n                  </div>\n                ))\n              : this.state.grid.map(components => (\n                  <div className=\"item box\">\n                    <div className=\"item-content\">\n                      {components}\n                    </div>\n                  </div>\n                ))} */}\n          </div>\n        </div>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n\n#loader{\n  text-align: center;\n  margin-top: 10vh;\n}\n\n  .item {\n    /* color: white; */\n\n    /* height: 200px;\n    margin: 20px; */\n    position: absolute; /* Required by Muuri */\n    /* width: 200px; */\n    width: 33.3%;\n    height: 33.3vh;\n    margin: auto;\n  }\n\n  .item-content {\n    margin-top: 0.6%;\n    margin-left: 0.25%;\n    margin-right: 0.25%;\n  }\n  .google {\n  }\n  .muuri-item-dragging {\n    z-index: 3; /* Required by Muuri */\n  }\n\n  .muuri-item-releasing {\n    z-index: 2; /* Required by Muuri */\n  }\n\n  .muuri-item-hidden {\n    z-index: 0; /* Required by Muuri */\n  }\n\n  .box1 {\n    background-color: lightpink; /* Go */\n  }\n\n  .box2 {\n    background-color: lightblue; /* Gators */\n  }\n\n  @media only screen and (min-width: 0px) and (max-width: 600px) { \n    .item{\n      width: 100%;\n      height: 33.3vh;\n    }\n  \n  }\n`;\n\nexport default Grid2;\n"]},"metadata":{},"sourceType":"module"}