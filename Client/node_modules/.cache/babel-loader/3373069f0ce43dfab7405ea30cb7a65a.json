{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/Weather.js\";\nimport React, { useState, Component } from \"react\";\nimport styled from \"styled-components\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport searchLogo from \"./images/Search.png\";\nimport CurrentLocation from \"./images/CurrentLocation.png\";\nimport API from \"./utils/API\";\nimport key from \"./utils/googleKey\";\nconst id = \"weather\";\n\nclass Weather extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      moduleInstanceId: \"pooooop\",\n      currentCity: \"\",\n      userInput: \"Santa Barbara\",\n      userEntry: \"\",\n      city: \"\",\n      temp: \"\",\n      name: \"\",\n      maxTemp: \"\",\n      minTemp: \"\",\n      description: \"\",\n      icon: \"\",\n      forecast: [],\n      hourlyForecast: [],\n      hourlyTimes: [],\n      hourly: false,\n      apiError: false,\n      style: {\n        fontWeight: 900\n      },\n      cityLength: true,\n      cityDescription: true\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n      event.preventDefault();\n    };\n\n    this.handleKeyPress = event => {\n      if (event.key === \"Enter\") {\n        this.checkWeather();\n      }\n    };\n\n    this.getCityLength = () => {\n      this.state.currentCity.length > 14 ? this.setState({\n        cityLength: false\n      }) : this.setState({\n        cityLength: true\n      });\n    };\n\n    this.getCityDescription = () => {\n      this.state.description.length > 9 ? this.setState({\n        cityDescription: false\n      }) : this.setState({\n        cityDescription: true\n      });\n    };\n\n    this.getUserLocation = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      navigator.geolocation.getCurrentPosition(position => {\n        Geocode.setApiKey(key);\n        Geocode.setLanguage(\"en\");\n        Geocode.setRegion(\"es\");\n        Geocode.enableDebug();\n        Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n          const address = response.results[0].formatted_address;\n          const userCity = address.split(\",\", 3);\n          const city = userCity[1];\n          this.setState({\n            userInput: city,\n            currentCity: city,\n            apiError: false\n          }, () => {\n            this.displayWeather();\n            this.displayForecast();\n            this.displayHourly();\n            this.getCityLength();\n          });\n        }, error => {\n          console.error(error);\n          this.setState({\n            apiError: true\n          });\n        });\n      });\n    };\n\n    this.checkWeather = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      API.getCurrentWeather(this.state.userInput).then(res => {\n        this.setState({\n          apiError: false\n        });\n        this.displayWeather();\n        this.displayForecast();\n        this.displayHourly();\n        this.getCityDescription();\n        this.getCityLength();\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.displayWeather = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      API.getCurrentWeather(this.state.userInput).then(res => this.setState({\n        name: res.data.name,\n        description: res.data.weather[0].description,\n        temp: res.data.main.temp,\n        minTemp: res.data.main.temp_min,\n        maxTemp: res.data.main.temp_max,\n        icon: res.data.weather[0].icon,\n        apiError: false\n      })).catch(err => {\n        console.log(err);\n        this.setState({\n          apiError: true\n        });\n      });\n      this.getCityDescription();\n    };\n\n    this.displayForecast = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      API.getWeeklyWeather(this.state.userInput).then(res => this.setState({\n        forecast: res.data.list,\n        apiError: false\n      })).catch(err => {\n        console.log(err);\n        this.setState({\n          apiError: true\n        });\n        this.setState({\n          currentCity: this.state.currentCity\n        });\n      });\n    };\n\n    this.displayHourly = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      API.getDailyWeather(this.state.userInput).then(res => this.setState({\n        hourlyForecast: res.data.list.slice(0, 10),\n        apiError: false\n      })).catch(err => console.log(err));\n      const hours = new Date();\n      const hour = hours.getHours();\n      var i;\n      API.getDailyWeather(this.state.userInput).then(res => res.data.list.slice(0, 10).map((list, index) => {\n        const date = new Date(list.dt_txt + \" UTC\");\n        var time = 0;\n\n        if (hour > 12) {\n          time = hour - 12 + index;\n\n          if (time > 12) {\n            time = time - 12;\n            var timed = time.toString();\n            var times = timed + \" am\";\n            this.setState({\n              hourlyTimes: this.state.hourlyTimes.concat(times)\n            });\n          } else {\n            time = time.toString();\n            var times = time + \" pm\";\n            this.setState({\n              hourlyTimes: this.state.hourlyTimes.concat(times)\n            });\n          }\n        } else {\n          time = hour + index;\n\n          if (time > 12) {\n            time = time - 12;\n            var timed = time.toString();\n            var times = timed + \" am\";\n            this.setState({\n              hourlyTimes: this.state.hourlyTimes.concat(times)\n            });\n          } else {\n            time = time.toString();\n            var times = time + \" pm\";\n            this.setState({\n              hourlyTimes: this.state.hourlyTimes.concat(times)\n            });\n          }\n        } // this.setState({\n        //   hourlyTimes: this.state.hourlyTimes.concat(\n        //     date\n        //       .toLocaleTimeString(\"en-US\")\n        //       .replace(\":00:00\", \"\")\n        //       .toLowerCase()\n        //   )\n        // });\n\n      })).catch(err => {\n        console.log(err);\n        this.setState({\n          apiError: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.displayWeather();\n    this.displayForecast();\n    this.displayHourly();\n    this.getCityLength(); // this.getUserLocation();\n  }\n\n  render() {\n    console.log(this.state.hourlyTimes);\n    const d = new Date();\n    const weekday = new Array(14);\n    weekday[0] = \"Sunday\";\n    weekday[1] = \"Monday\";\n    weekday[2] = \"Tuesday\";\n    weekday[3] = \"Wednesday\";\n    weekday[4] = \"Thursday\";\n    weekday[5] = \"Friday\";\n    weekday[6] = \"Saturday\";\n    weekday[7] = \"Sunday\";\n    weekday[8] = \"Monday\";\n    weekday[9] = \"Tuesday\";\n    weekday[10] = \"Wednesday\";\n    weekday[11] = \"Thursday\";\n    weekday[12] = \"Friday\";\n    weekday[13] = \"Saturday\";\n    weekday[14] = \"Sunday\";\n    return /*#__PURE__*/React.createElement(Style, {\n      id: this.state.moduleInstanceId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"weatherBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"inputBox2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"inputBox\",\n      onKeyPress: this.handleKeyPress,\n      onFocus: e => {\n        this.setState({\n          userInput: \"\"\n        });\n      },\n      value: this.state.userInput || \"\",\n      name: \"inputBox\",\n      placeholder: this.state.userInput,\n      onChange: this.handleChange,\n      types: [\"(cities)\"],\n      componentRestrictions: {\n        country: \"us\"\n      },\n      onPlaceSelected: place => {\n        const autoCompleteAdddres = place.formatted_address;\n\n        if (autoCompleteAdddres != null) {\n          const autoCompleteCity = autoCompleteAdddres.split(\",\", 3);\n          const city = autoCompleteCity[0];\n          this.setState({\n            currentCity: city,\n            userInput: autoCompleteCity,\n            userEntry: autoCompleteAdddres\n          });\n          this.checkWeather();\n        } else {\n          console.log(\"invalid\");\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      onClick: e => {\n        this.getUserLocation();\n      },\n      id: \"currentLocation\",\n      src: CurrentLocation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      id: \"search\",\n      src: searchLogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"optionsBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: this.state.hourly ? {\n        fontWeight: \"normal\"\n      } : {\n        fontWeight: 900\n      },\n      className: \"hover\",\n      onClick: e => {\n        this.setState({\n          hourly: false\n        });\n      },\n      id: \"daily\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    }, \"Daily\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"linebreak\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }\n    }, \" | \"), /*#__PURE__*/React.createElement(\"p\", {\n      style: this.state.hourly ? {\n        fontWeight: 900\n      } : {\n        fontWeight: \"normal\"\n      },\n      className: \"hover\",\n      onClick: e => {\n        this.setState({\n          hourly: true\n        });\n      },\n      id: \"hourly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 17\n      }\n    }, \"Hourly\")))), this.state.apiError === false ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"leftBoxCurrent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: this.state.cityLength ? \"city\" : \"longcity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }, this.state.name), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"leftInner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"leftSide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 21\n      }\n    }, this.state.temp === \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"currentTemp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 25\n      }\n    }, parseInt(this.state.temp), \"\\xB0\"), /*#__PURE__*/React.createElement(\"h5\", {\n      id: this.state.cityDescription ? \"cityDescription\" : \"longCityDescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 23\n      }\n    }, this.state.description))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"rightSide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, this.state.icon != \"\" ? /*#__PURE__*/React.createElement(\"img\", {\n      id: \"iconPic\",\n      src: \"http://openweathermap.org/img/wn/\" + this.state.icon + \"@2x.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"temps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 23\n      }\n    }, this.state.temp === \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"minMax\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 27\n      }\n    }, parseInt(this.state.minTemp), \"\\xB0\"), this.state.temp === \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"minMax\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 27\n      }\n    }, parseInt(this.state.maxTemp), \"\\xB0\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"rightBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }\n    }, \" \", this.state.hourly === false ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"daily\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 21\n      }\n    }, this.state.forecast.slice(-15).map(({\n      temp,\n      weather\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"dayBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        id: \"day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 31\n        }\n      }, weekday[d.getDay() + index + 1]), /*#__PURE__*/React.createElement(\"img\", {\n        id: \"dayPic\",\n        src: \"http://openweathermap.org/img/wn/\" + weather[0].icon + \"@2x.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"dayTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        id: \"dayMin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 33\n        }\n      }, parseInt(temp.min), \"\\xB0\"), /*#__PURE__*/React.createElement(\"p\", {\n        id: \"dayMax\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 33\n        }\n      }, parseInt(temp.max), \"\\xB0\")));\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hourly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }, this.state.hourlyForecast.slice(-10).map(({\n      main,\n      weather\n    }, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"hourBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        id: \"hour\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 31\n        }\n      }, this.state.hourlyTimes[index]), /*#__PURE__*/React.createElement(\"img\", {\n        id: \"hourPic\",\n        src: \"http://openweathermap.org/img/wn/\" + weather[0].icon + \"@2x.png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"hourTemp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        id: \"hours\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 33\n        }\n      }, parseInt(main.temp), \"\\xB0\")));\n    }))))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 13\n      }\n    }, \"invalid city\")));\n  }\n\n}\n\nexport default Weather;\nconst Style = styled.section`\n#weatherBox{\n\toverflow:hidden;\n\theight:32.33vh;\n\tborder-radius: 15px;\n}\n\n#dayBox{\n\tdisplay:inline-block;\n\tdisplay:flex;\n\t\twidth: 100%;\n\t\tmargin-top: -5%;\n\n}\n\n#dayMin{\n\tdisplay:inline-block;\n\tmargin-right: 20%;\n\tpadding-top: 13%;\n}\n#dayMax{\n\tdisplay:inline-block;\n\n}\n\n#dayPic{\n\tdisplay:inline-block;\n\tflex-grow:1;   \n  width: 18%;\n  height: 18%;\n\tmargin-top: 2.7%;\n\n}\n\n#dayTemp{\n\tdisplay:inline-block;\n\tflex-grow:1;\n\tfont-size: 1vw;\n\tmargin-right:5%;\n\twidth: 27%;\n}\n\n\n#day{\n\tdisplay:inline-block;\t\n\tfont-size: 1vw;\n\ttext-align:left;\n\talign-self:left;\n\n\tflex-grow: 1;\n    \n\t\n\twidth: 31%;\n    margin-left: 8%;\n    font-weight: 600;\n    margin-top: 10%;\n    margin-bottom: 0;\n}\n\n#hourBox{\n\tdisplay:inline-block;\n\tdisplay:flex;\n\t\twidth: 100%;\n\t\tmargin-top:-5%\n}\n\n #hours{\n\tdisplay:inline-block;\n\tmargin-right: 1%;\n\tpadding-top: 1%;\n\tmargin-left: 1%;\n\tmargin-top: 28%;\n}\n\n\n#hourPic{\n\tdisplay:inline-block;\n  width: 22%;\n  height: 22%;\n    margin-left: 7%;\n    margin-top: 3.5%;\n\n}\n\n#hourTemp{\n\tdisplay:inline-block;\n\tflex-grow:1;\n\tfont-size: 1vw;\n\tmargin-right:1%;\n\twidth: 7%;\n\ttext-align:center;\n}\n\n\n#hour{\n\tdisplay:inline-block;\t\n\tfont-size: 1vw;\n\ttext-align:left;\n\talign-self:left;\n\tflex-grow:1;\n\twidth: 7%;\n   margin-left: 1%;\n   font-weight: 600;\n   margin-top: 10%;\n\ttext-align:center;\n}\n\n\n.title{\n\tmargin:0;\n}\n#temps{\n  margin-top: -0.4%;\n  text-align: center;\n\n}\n  #leftBoxCurrent {\n    display: flex;\n    width: 43%;\n\tflex-wrap: wrap;\n    width: 50%;\n\theight: 23vh;\n    overflow: scroll;\n\tmargin: 2%;\n\tmargin-right:1%;\n    border-radius: 15px;\n    background-color: #133467;\n\toverflow: hidden;\n  }\n  #rightBox {\n\twidth: 50%;\n\theight: 23vh;\n\toverflow: scroll;\n\tmargin-top: 2%;\n    border-radius: 15px;\n\tmargin-left: 1%;\n\tmargin-right: 2%;\n\tbackground-color: #0c1f3e;\n\n  }\n\n  #leftInner{\n\t\n\tdisplay: flex;\n\twidth: 49%;\n  }\n  #leftSide {\n    flex-grow: 1;\n    color: white;\n\tmargin-Left: 11%;\n  }\n  #rightSide {\n    flex-grow: 1;\n\tdisplay: flex;\n\tmargin-top: -1%;\n\twidth: 49%;\n}\n\n\n\n  }\n\n  .minMax {\n\tdisplay: inline-block;\n    padding: 0 1%;\n    color: white;\n    margin: 0;\n\tfont-size: 1vw;\n  font-weight: 400;\n  margin-left: 6%;\n\t\n\n  }\n\n  #iconPic {\n    text-align: center;\n\t/* filter: brightness(0) invert(1); */\n    /* margin-top: 9.2%;\t   */\n\t  width: 90%;\n  }\n\n  .hover {\n    position: relative;\n    display: inline-block;\n  }\n\n  .hover:before {\n    content: \"\";\n    position: absolute;\n    height: 4px;\n    bottom: -6px;\n    left: 0;\n    background-color: #fff;\n    width: 0%;\n    transition: all 0.35s ease-in-out;\n    opacity: 0;\n  }\n\n  .hover:hover:before {\n    width: 100%;\n    opacity: 1;\n  }\n\n  #cityDescription {\n\ttext-transform: uppercase;\n\n\tfont-size: 1vw;\nmargin-top: 6%;\n    font-weight: 400;\n    margin-bottom: 0;\n    text-align: center;\n  \n  }\n\n  #longCityDescription{\n\ttext-transform: uppercase;\n\nfont-size: 1vw;\nmargin-top: 6%;\nfont-weight: 400;\nmargin-bottom: 0;\ntext-align: center;\n\n  }\n\n#currentTemp{\n    font-size: 4.5vw;\n\tmargin:0px;\t\n\t/* margin: 0 0 0 0.5em; */\n\tmargin-top: 0%;\n\tfont-weight:500;\n}\n\n  \n  #currentText {\n  }\n\n  #currentText:hover {\n    cursor: pointer;\n  }\n\n  #center{\n    margin-left: 22%;\n  }\n\n  #nav {\n    background-color: #133467;\n    padding: 2%;\n\tpadding-bottom: 3%;\n    padding-top: 2%;\n  }\n\n  #current {\n\t  display:flex;\n    display: inline-block;\n    font-size: 13px;\n    flex-grow: 1;\n    text-align: left;\n    margin-left: 8%;\n  }\n\n  #options {\n   color:white;\n  }\n\n  #hourly {\n    display: inline-block;\n    margin-left: 0.3em;\n\tmargin-top:1%;\n\tmargin-bottom: 0%;\n  }\n\n  #hourly:hover {\n    cursor: pointer;\n  }\n\n  #daily {\n    display: inline-block;\n    margin-right: 0.3em;\n\tmargin-left: 2%;\n\tmargin-top:1%;\n\tmargin-bottom: 0%;\n  }\n\n  #daily:hover {\n    cursor: pointer;\n  }\n\n#optionsBox{\n\ttext-align: right;\n\tfont-size: 0.8em;\n}\n  #linebreak {\n    display: inline-block;\n\tmargin-top:1%;\n\tmargin-bottom: 0%;\n  }\n  #navOptions {\n    background-color: #0c1f3e;\n    color: white;\n    display: flex;\n  }\n  #search {\n    width: 1em;\n    position: absolute;\n    right: -1%;\n    top: 20%;\n  }\n  #currentLocation {\n    width: 0.65em;\n    position: absolute;\n    left: 2%;\n    top: 20.5%;\n  }\n\n\n  #currentLocation:hover {\n    cursor: pointer;\n  }\n\n  #city {\n    text-transform: capitalize;\n\n\tfont-size: 1.9vw;\n    width: 100%;\n    color: white;\n\tmargin-bottom:0;\n\tfont-weight: 400;\n  align-self: center;\n  text-align: center;\n\n  }\n\n  #longcity {\n    text-transform: capitalize;\n\n\tfont-size: 1em;\n    width: 100%;\n    color: white;\n\tmargin-bottom:0;\n\tfont-weight: 400;\n\talign-self: center;\n\tmargin-top: 8%;\n\n  }\n  #inputBox {\n    margin: 0 auto;\n    border-radius: 10px;\n    border: 0;\n    background-color: #425c86;\n    color: white;\n    padding: 1.5%;\n    width: 100%;\n    text-align: center;\n    font-size: 14px;\n    text-transform: capitalize;\n  }\n  #inputBox2 {\n    position: relative;\n    width: 60%;\n\tdisplay: inline-block;\n\tfloat: left;\n   \n  }\n\n  #inputBox:focus {\n    outline: none;\n  }\n  #inputBox::placeholder {\n    color: lightgray;\n  }\n  .box {\n    /* outline: red 1px solid; */\n    height: 26vh;\n    width: 100%;\n  } \n  .current {\n    background-color: #425c86;\n\tdisplay:flex;\n\tmin-height: min-content;\n\theight: 27vh;\n\n  }\n  .daily {\n    background-color: #0c1f3e;;\nmargin-top:0; \ncolor:white; }\n\n  .hourly {\n    background-color: #0c1f3e;\n\tmargin-top:0;\n\tcolor:white;\n\n  }\n\n  @media only screen and (min-width: 0px) and (max-width: 600px) { \n #city {\n      text-transform: capitalize;\n      font-size: 1.2em;\n      width: 100%;\n      color: white;\n      margin-bottom: 0;\n      font-weight: 400;\n      -webkit-align-self: center;\n      -ms-flex-item-align: center;\n      align-self: center;\n      text-align: center;\n  }\n\n  #currentTemp {\n    font-size: 3.5em;\n    margin: 0px;\n    margin-top: 0%;\n    font-weight: 500;\n\n  }\n\n  #cityDescription {\n    text-transform: uppercase;\n    font-size: 0.8em;\n    margin-top: 6%;\n    font-weight: 400;\n    margin-bottom: 0;\n    text-align: center;\n}\n\n.minMax {\n  display: inline-block;\n  padding: 0 1%;\n  color: white;\n  margin: 0;\n  font-size: 0.9em;\n  font-weight: 400;\n  margin-left: 6%;\n}\n    #iconPic {\n    text-align: center;\n    width: 97%;\n}\n\n#day {\n  display: inline-block;\n  font-size: 0.7em;\n  text-align: left;\n  -webkit-align-self: left;\n  -ms-flex-item-align: left;\n  align-self: left;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  width: 31%;\n  margin-left: 8%;\n  font-weight: 600;\n  margin-top: 10%;\n  margin-bottom: 0;\n}\n\n #dayTemp {\n  display: inline-block;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  font-size: 0.5em;\n  margin-right: 5%;\n  width: 27%;\n}\n\n#hour {\n  display: inline-block;\n  font-size: 0.7em;\n  text-align: left;\n  -webkit-align-self: left;\n  -ms-flex-item-align: left;\n  align-self: left;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  width: 7%;\n  margin-left: 1%;\n  font-weight: 600;\n  margin-top: 10%;\n  text-align: center;\n}\n\n#hourTemp {\n  display: inline-block;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  font-size: 0.8em;\n  margin-right: 1%;\n  width: 7%;\n  text-align: center;\n}\n  \n  }\n\n\n`;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/Client/src/Weather.js"],"names":["React","useState","Component","styled","Autocomplete","Geocode","searchLogo","CurrentLocation","API","key","id","Weather","state","moduleInstanceId","currentCity","userInput","userEntry","city","temp","name","maxTemp","minTemp","description","icon","forecast","hourlyForecast","hourlyTimes","hourly","apiError","style","fontWeight","cityLength","cityDescription","handleChange","event","setState","target","value","preventDefault","handleKeyPress","checkWeather","getCityLength","length","getCityDescription","getUserLocation","i","navigator","geolocation","getCurrentPosition","position","setApiKey","setLanguage","setRegion","enableDebug","fromLatLng","coords","latitude","longitude","then","response","address","results","formatted_address","userCity","split","displayWeather","displayForecast","displayHourly","error","console","getCurrentWeather","res","catch","err","log","data","weather","main","temp_min","temp_max","getWeeklyWeather","list","getDailyWeather","slice","hours","Date","hour","getHours","map","index","date","dt_txt","time","timed","toString","times","concat","componentDidMount","render","d","weekday","Array","e","country","place","autoCompleteAdddres","autoCompleteCity","parseInt","getDay","min","max","Style","section"],"mappings":"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":["import React, { useState, Component } from \"react\";\nimport styled from \"styled-components\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\nimport searchLogo from \"./images/Search.png\";\nimport CurrentLocation from \"./images/CurrentLocation.png\";\nimport API from \"./utils/API\";\nimport key from \"./utils/googleKey\";\n\nconst id = \"weather\";\n\nclass Weather extends Component {\n  state = {\n    moduleInstanceId: \"pooooop\",\n    currentCity: \"\",\n    userInput: \"Santa Barbara\",\n    userEntry: \"\",\n    city: \"\",\n    temp: \"\",\n    name: \"\",\n    maxTemp: \"\",\n    minTemp: \"\",\n    description: \"\",\n    icon: \"\",\n    forecast: [],\n    hourlyForecast: [],\n    hourlyTimes: [],\n    hourly: false,\n    apiError: false,\n    style: {\n      fontWeight: 900\n    },\n    cityLength: true,\n    cityDescription: true\n  };\n\n  componentDidMount() {\n    this.displayWeather();\n    this.displayForecast();\n    this.displayHourly();\n    this.getCityLength();\n    // this.getUserLocation();\n  }\n\n  handleChange = event => {\n    this.setState({\n      userInput: event.target.value\n    });\n    event.preventDefault();\n  };\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      this.checkWeather();\n    }\n  };\n\n  getCityLength = () => {\n    this.state.currentCity.length > 14\n      ? this.setState({\n          cityLength: false\n        })\n      : this.setState({\n          cityLength: true\n        });\n  };\n\n  getCityDescription = () => {\n    this.state.description.length > 9\n      ? this.setState({\n          cityDescription: false\n        })\n      : this.setState({\n          cityDescription: true\n        });\n  };\n\n  getUserLocation = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    navigator.geolocation.getCurrentPosition(position => {\n      Geocode.setApiKey(key);\n      Geocode.setLanguage(\"en\");\n      Geocode.setRegion(\"es\");\n      Geocode.enableDebug();\n      Geocode.fromLatLng(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then(\n        response => {\n          const address = response.results[0].formatted_address;\n          const userCity = address.split(\",\", 3);\n          const city = userCity[1];\n          this.setState(\n            {\n              userInput: city,\n              currentCity: city,\n              apiError: false\n            },\n            () => {\n              this.displayWeather();\n              this.displayForecast();\n              this.displayHourly();\n              this.getCityLength();\n            }\n          );\n        },\n        error => {\n          console.error(error);\n          this.setState({\n            apiError: true\n          });\n        }\n      );\n    });\n  };\n\n  checkWeather = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    API.getCurrentWeather(this.state.userInput)\n      .then(res => {\n        this.setState({\n          apiError: false\n        });\n        this.displayWeather();\n        this.displayForecast();\n        this.displayHourly();\n        this.getCityDescription();\n        this.getCityLength();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  displayWeather = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    API.getCurrentWeather(this.state.userInput)\n      .then(res =>\n        this.setState({\n          name: res.data.name,\n          description: res.data.weather[0].description,\n          temp: res.data.main.temp,\n          minTemp: res.data.main.temp_min,\n          maxTemp: res.data.main.temp_max,\n          icon: res.data.weather[0].icon,\n          apiError: false\n        })\n      )\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          apiError: true\n        });\n      });\n    this.getCityDescription();\n  };\n\n  displayForecast = i => {\n    if (i) {\n      i.preventDefault();\n    }\n\n    API.getWeeklyWeather(this.state.userInput)\n      .then(res =>\n        this.setState({\n          forecast: res.data.list,\n          apiError: false\n        })\n      )\n\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          apiError: true\n        });\n        this.setState({\n          currentCity: this.state.currentCity\n        });\n      });\n  };\n\n  displayHourly = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    API.getDailyWeather(this.state.userInput)\n      .then(res =>\n        this.setState({\n          hourlyForecast: res.data.list.slice(0, 10),\n          apiError: false\n        })\n      )\n      .catch(err => console.log(err));\n\n      const hours = new Date();\n      const hour = hours.getHours();\n    \n\n      var i;\n\n\n    \n\n\n\n    API.getDailyWeather(this.state.userInput)\n      .then(res =>\n        res.data.list.slice(0, 10).map((list, index) => {\n          const date = new Date(list.dt_txt + \" UTC\");\n         \n\n          var time = 0;\n  \n  if(hour > 12) {\n    time = (hour-12) + index;\n    if (time > 12){\n      time = time-12;\n     var timed = time.toString();\n    var  times = timed + \" am\";\n      this.setState({hourlyTimes: this.state.hourlyTimes.concat(times) });\n    } else{\n      time = time.toString();\n   \n      var  times = time + \" pm\";\n      this.setState({hourlyTimes: this.state.hourlyTimes.concat(times) });\n    } \n\n    }\n    else {\n      time = (hour) + index;\n      if (time > 12){\n        time = time-12;\n   \n       var timed = time.toString();\n      var  times = timed + \" am\";\n        this.setState({hourlyTimes: this.state.hourlyTimes.concat(times) });\n      } else{\n        time = time.toString();\n  \n        var  times = time + \" pm\";\n        this.setState({hourlyTimes: this.state.hourlyTimes.concat(times) });\n      }\n  } \n\n\n    \n\n          // this.setState({\n          //   hourlyTimes: this.state.hourlyTimes.concat(\n          //     date\n          //       .toLocaleTimeString(\"en-US\")\n          //       .replace(\":00:00\", \"\")\n          //       .toLowerCase()\n          //   )\n          // });\n        })\n      )\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          apiError: true\n        });\n      });\n  };\n\n  render() {\n    console.log(this.state.hourlyTimes);\n    const d = new Date();\n    const weekday = new Array(14);\n\n    weekday[0] = \"Sunday\";\n    weekday[1] = \"Monday\";\n    weekday[2] = \"Tuesday\";\n    weekday[3] = \"Wednesday\";\n    weekday[4] = \"Thursday\";\n    weekday[5] = \"Friday\";\n    weekday[6] = \"Saturday\";\n    weekday[7] = \"Sunday\";\n    weekday[8] = \"Monday\";\n    weekday[9] = \"Tuesday\";\n    weekday[10] = \"Wednesday\";\n    weekday[11] = \"Thursday\";\n    weekday[12] = \"Friday\";\n    weekday[13] = \"Saturday\";\n    weekday[14] = \"Sunday\";\n\n    return (\n      <Style id={this.state.moduleInstanceId}>\n        <div id=\"weatherBox\">\n          <div id=\"nav\">\n            <div id=\"inputBox2\">\n              <Autocomplete\n                id=\"inputBox\"\n                onKeyPress={this.handleKeyPress}\n                onFocus={e => {\n                  this.setState({ userInput: \"\" });\n                }}\n                value={this.state.userInput || \"\"}\n                name=\"inputBox\"\n                placeholder={this.state.userInput}\n                onChange={this.handleChange}\n                types={[\"(cities)\"]}\n                componentRestrictions={{ country: \"us\" }}\n                onPlaceSelected={place => {\n                  const autoCompleteAdddres = place.formatted_address;\n                  if (autoCompleteAdddres != null) {\n                    const autoCompleteCity = autoCompleteAdddres.split(\",\", 3);\n                    const city = autoCompleteCity[0];\n                    this.setState({\n                      currentCity: city,\n                      userInput: autoCompleteCity,\n                      userEntry: autoCompleteAdddres\n                    });\n                    this.checkWeather();\n                  } else {\n                    console.log(\"invalid\");\n                  }\n                }}\n              />\n              <img\n                onClick={e => {\n                  this.getUserLocation();\n                }}\n                id=\"currentLocation\"\n                src={CurrentLocation}\n              />\n              <img id=\"search\" src={searchLogo} />\n            </div>\n            <div id=\"options\">\n              <div id=\"optionsBox\">\n                <p\n                  style={\n                    this.state.hourly\n                      ? { fontWeight: \"normal\" }\n                      : { fontWeight: 900 }\n                  }\n                  className=\"hover\"\n                  onClick={e => {\n                    this.setState({\n                      hourly: false\n                    });\n                  }}\n                  id=\"daily\"\n                >\n                  Daily\n                </p>\n                <p id=\"linebreak\"> | </p>\n                <p\n                  style={\n                    this.state.hourly\n                      ? { fontWeight: 900 }\n                      : { fontWeight: \"normal\" }\n                  }\n                  className=\"hover\"\n                  onClick={e => {\n                    this.setState({\n                      hourly: true\n                    });\n                  }}\n                  id=\"hourly\"\n                >\n                  Hourly\n                </p>\n              </div>\n            </div>\n          </div>\n          {this.state.apiError === false ? (\n            <div className=\"box\">\n              <div className=\"current\">\n                <div id=\"leftBoxCurrent\">\n                  <div id={this.state.cityLength ? \"city\" : \"longcity\"}>\n                    {this.state.name}\n                  </div>\n                  <div id=\"leftInner\">\n                    <div id=\"leftSide\">\n                      {this.state.temp === \"\" ? (\n                        <p></p>\n                      ) : (\n                        <h1 id=\"currentTemp\">{parseInt(this.state.temp)}°</h1>\n                      )}\n\n                      <h5\n                        id={\n                          this.state.cityDescription\n                            ? \"cityDescription\"\n                            : \"longCityDescription\"\n                        }\n                      >\n                        {this.state.description}\n                      </h5>\n                    </div>\n                  </div>\n                  <div id=\"rightSide\">\n                    <div id=\"center\">\n                      {this.state.icon != \"\" ? (\n                        <img\n                          id=\"iconPic\"\n                          src={\n                            \"http://openweathermap.org/img/wn/\" +\n                            this.state.icon +\n                            \"@2x.png\"\n                          }\n                        />\n                      ) : (\n                        <p></p>\n                      )}\n                      <div id=\"temps\">\n                        {this.state.temp === \"\" ? (\n                          <p></p>\n                        ) : (\n                          <h5 className=\"minMax\">\n                            {parseInt(this.state.minTemp)}°\n                          </h5>\n                        )}\n                        {this.state.temp === \"\" ? (\n                          <p></p>\n                        ) : (\n                          <h5 className=\"minMax\">\n                            {parseInt(this.state.maxTemp)}°\n                          </h5>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div id=\"rightBox\">\n                  {\" \"}\n                  {this.state.hourly === false ? (\n                    <div className=\"daily\">\n                      {this.state.forecast\n                        .slice(-15)\n                        .map(({ temp, weather }, index) => {\n                          return (\n                            <div id=\"dayBox\">\n                              <h1 id=\"day\">\n                                {weekday[d.getDay() + index + 1]}\n                              </h1>\n                              <img\n                                id=\"dayPic\"\n                                src={\n                                  \"http://openweathermap.org/img/wn/\" +\n                                  weather[0].icon +\n                                  \"@2x.png\"\n                                }\n                              />\n                              <div id=\"dayTemp\">\n                                <p id=\"dayMin\">{parseInt(temp.min)}°</p>\n                                <p id=\"dayMax\">{parseInt(temp.max)}°</p>\n                              </div>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  ) : (\n                    <div className=\"hourly\">\n                      {this.state.hourlyForecast\n                        .slice(-10)\n                        .map(({ main, weather }, index) => {\n                          return (\n                            <div id=\"hourBox\">\n                              <h1 id=\"hour\">{this.state.hourlyTimes[index]}</h1>\n\n                              <img\n                                id=\"hourPic\"\n                                src={\n                                  \"http://openweathermap.org/img/wn/\" +\n                                  weather[0].icon +\n                                  \"@2x.png\"\n                                }\n                              />\n                              <div id=\"hourTemp\">\n                                <p id=\"hours\">{parseInt(main.temp)}°</p>\n                              </div>\n                            </div>\n                          );\n                        })}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ) : (\n            <p>invalid city</p>\n          )}\n        </div>\n      </Style>\n    );\n  }\n}\n\nexport default Weather;\n\nconst Style = styled.section`\n#weatherBox{\n\toverflow:hidden;\n\theight:32.33vh;\n\tborder-radius: 15px;\n}\n\n#dayBox{\n\tdisplay:inline-block;\n\tdisplay:flex;\n\t\twidth: 100%;\n\t\tmargin-top: -5%;\n\n}\n\n#dayMin{\n\tdisplay:inline-block;\n\tmargin-right: 20%;\n\tpadding-top: 13%;\n}\n#dayMax{\n\tdisplay:inline-block;\n\n}\n\n#dayPic{\n\tdisplay:inline-block;\n\tflex-grow:1;   \n  width: 18%;\n  height: 18%;\n\tmargin-top: 2.7%;\n\n}\n\n#dayTemp{\n\tdisplay:inline-block;\n\tflex-grow:1;\n\tfont-size: 1vw;\n\tmargin-right:5%;\n\twidth: 27%;\n}\n\n\n#day{\n\tdisplay:inline-block;\t\n\tfont-size: 1vw;\n\ttext-align:left;\n\talign-self:left;\n\n\tflex-grow: 1;\n    \n\t\n\twidth: 31%;\n    margin-left: 8%;\n    font-weight: 600;\n    margin-top: 10%;\n    margin-bottom: 0;\n}\n\n#hourBox{\n\tdisplay:inline-block;\n\tdisplay:flex;\n\t\twidth: 100%;\n\t\tmargin-top:-5%\n}\n\n #hours{\n\tdisplay:inline-block;\n\tmargin-right: 1%;\n\tpadding-top: 1%;\n\tmargin-left: 1%;\n\tmargin-top: 28%;\n}\n\n\n#hourPic{\n\tdisplay:inline-block;\n  width: 22%;\n  height: 22%;\n    margin-left: 7%;\n    margin-top: 3.5%;\n\n}\n\n#hourTemp{\n\tdisplay:inline-block;\n\tflex-grow:1;\n\tfont-size: 1vw;\n\tmargin-right:1%;\n\twidth: 7%;\n\ttext-align:center;\n}\n\n\n#hour{\n\tdisplay:inline-block;\t\n\tfont-size: 1vw;\n\ttext-align:left;\n\talign-self:left;\n\tflex-grow:1;\n\twidth: 7%;\n   margin-left: 1%;\n   font-weight: 600;\n   margin-top: 10%;\n\ttext-align:center;\n}\n\n\n.title{\n\tmargin:0;\n}\n#temps{\n  margin-top: -0.4%;\n  text-align: center;\n\n}\n  #leftBoxCurrent {\n    display: flex;\n    width: 43%;\n\tflex-wrap: wrap;\n    width: 50%;\n\theight: 23vh;\n    overflow: scroll;\n\tmargin: 2%;\n\tmargin-right:1%;\n    border-radius: 15px;\n    background-color: #133467;\n\toverflow: hidden;\n  }\n  #rightBox {\n\twidth: 50%;\n\theight: 23vh;\n\toverflow: scroll;\n\tmargin-top: 2%;\n    border-radius: 15px;\n\tmargin-left: 1%;\n\tmargin-right: 2%;\n\tbackground-color: #0c1f3e;\n\n  }\n\n  #leftInner{\n\t\n\tdisplay: flex;\n\twidth: 49%;\n  }\n  #leftSide {\n    flex-grow: 1;\n    color: white;\n\tmargin-Left: 11%;\n  }\n  #rightSide {\n    flex-grow: 1;\n\tdisplay: flex;\n\tmargin-top: -1%;\n\twidth: 49%;\n}\n\n\n\n  }\n\n  .minMax {\n\tdisplay: inline-block;\n    padding: 0 1%;\n    color: white;\n    margin: 0;\n\tfont-size: 1vw;\n  font-weight: 400;\n  margin-left: 6%;\n\t\n\n  }\n\n  #iconPic {\n    text-align: center;\n\t/* filter: brightness(0) invert(1); */\n    /* margin-top: 9.2%;\t   */\n\t  width: 90%;\n  }\n\n  .hover {\n    position: relative;\n    display: inline-block;\n  }\n\n  .hover:before {\n    content: \"\";\n    position: absolute;\n    height: 4px;\n    bottom: -6px;\n    left: 0;\n    background-color: #fff;\n    width: 0%;\n    transition: all 0.35s ease-in-out;\n    opacity: 0;\n  }\n\n  .hover:hover:before {\n    width: 100%;\n    opacity: 1;\n  }\n\n  #cityDescription {\n\ttext-transform: uppercase;\n\n\tfont-size: 1vw;\nmargin-top: 6%;\n    font-weight: 400;\n    margin-bottom: 0;\n    text-align: center;\n  \n  }\n\n  #longCityDescription{\n\ttext-transform: uppercase;\n\nfont-size: 1vw;\nmargin-top: 6%;\nfont-weight: 400;\nmargin-bottom: 0;\ntext-align: center;\n\n  }\n\n#currentTemp{\n    font-size: 4.5vw;\n\tmargin:0px;\t\n\t/* margin: 0 0 0 0.5em; */\n\tmargin-top: 0%;\n\tfont-weight:500;\n}\n\n  \n  #currentText {\n  }\n\n  #currentText:hover {\n    cursor: pointer;\n  }\n\n  #center{\n    margin-left: 22%;\n  }\n\n  #nav {\n    background-color: #133467;\n    padding: 2%;\n\tpadding-bottom: 3%;\n    padding-top: 2%;\n  }\n\n  #current {\n\t  display:flex;\n    display: inline-block;\n    font-size: 13px;\n    flex-grow: 1;\n    text-align: left;\n    margin-left: 8%;\n  }\n\n  #options {\n   color:white;\n  }\n\n  #hourly {\n    display: inline-block;\n    margin-left: 0.3em;\n\tmargin-top:1%;\n\tmargin-bottom: 0%;\n  }\n\n  #hourly:hover {\n    cursor: pointer;\n  }\n\n  #daily {\n    display: inline-block;\n    margin-right: 0.3em;\n\tmargin-left: 2%;\n\tmargin-top:1%;\n\tmargin-bottom: 0%;\n  }\n\n  #daily:hover {\n    cursor: pointer;\n  }\n\n#optionsBox{\n\ttext-align: right;\n\tfont-size: 0.8em;\n}\n  #linebreak {\n    display: inline-block;\n\tmargin-top:1%;\n\tmargin-bottom: 0%;\n  }\n  #navOptions {\n    background-color: #0c1f3e;\n    color: white;\n    display: flex;\n  }\n  #search {\n    width: 1em;\n    position: absolute;\n    right: -1%;\n    top: 20%;\n  }\n  #currentLocation {\n    width: 0.65em;\n    position: absolute;\n    left: 2%;\n    top: 20.5%;\n  }\n\n\n  #currentLocation:hover {\n    cursor: pointer;\n  }\n\n  #city {\n    text-transform: capitalize;\n\n\tfont-size: 1.9vw;\n    width: 100%;\n    color: white;\n\tmargin-bottom:0;\n\tfont-weight: 400;\n  align-self: center;\n  text-align: center;\n\n  }\n\n  #longcity {\n    text-transform: capitalize;\n\n\tfont-size: 1em;\n    width: 100%;\n    color: white;\n\tmargin-bottom:0;\n\tfont-weight: 400;\n\talign-self: center;\n\tmargin-top: 8%;\n\n  }\n  #inputBox {\n    margin: 0 auto;\n    border-radius: 10px;\n    border: 0;\n    background-color: #425c86;\n    color: white;\n    padding: 1.5%;\n    width: 100%;\n    text-align: center;\n    font-size: 14px;\n    text-transform: capitalize;\n  }\n  #inputBox2 {\n    position: relative;\n    width: 60%;\n\tdisplay: inline-block;\n\tfloat: left;\n   \n  }\n\n  #inputBox:focus {\n    outline: none;\n  }\n  #inputBox::placeholder {\n    color: lightgray;\n  }\n  .box {\n    /* outline: red 1px solid; */\n    height: 26vh;\n    width: 100%;\n  } \n  .current {\n    background-color: #425c86;\n\tdisplay:flex;\n\tmin-height: min-content;\n\theight: 27vh;\n\n  }\n  .daily {\n    background-color: #0c1f3e;;\nmargin-top:0; \ncolor:white; }\n\n  .hourly {\n    background-color: #0c1f3e;\n\tmargin-top:0;\n\tcolor:white;\n\n  }\n\n  @media only screen and (min-width: 0px) and (max-width: 600px) { \n #city {\n      text-transform: capitalize;\n      font-size: 1.2em;\n      width: 100%;\n      color: white;\n      margin-bottom: 0;\n      font-weight: 400;\n      -webkit-align-self: center;\n      -ms-flex-item-align: center;\n      align-self: center;\n      text-align: center;\n  }\n\n  #currentTemp {\n    font-size: 3.5em;\n    margin: 0px;\n    margin-top: 0%;\n    font-weight: 500;\n\n  }\n\n  #cityDescription {\n    text-transform: uppercase;\n    font-size: 0.8em;\n    margin-top: 6%;\n    font-weight: 400;\n    margin-bottom: 0;\n    text-align: center;\n}\n\n.minMax {\n  display: inline-block;\n  padding: 0 1%;\n  color: white;\n  margin: 0;\n  font-size: 0.9em;\n  font-weight: 400;\n  margin-left: 6%;\n}\n    #iconPic {\n    text-align: center;\n    width: 97%;\n}\n\n#day {\n  display: inline-block;\n  font-size: 0.7em;\n  text-align: left;\n  -webkit-align-self: left;\n  -ms-flex-item-align: left;\n  align-self: left;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  width: 31%;\n  margin-left: 8%;\n  font-weight: 600;\n  margin-top: 10%;\n  margin-bottom: 0;\n}\n\n #dayTemp {\n  display: inline-block;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  font-size: 0.5em;\n  margin-right: 5%;\n  width: 27%;\n}\n\n#hour {\n  display: inline-block;\n  font-size: 0.7em;\n  text-align: left;\n  -webkit-align-self: left;\n  -ms-flex-item-align: left;\n  align-self: left;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  width: 7%;\n  margin-left: 1%;\n  font-weight: 600;\n  margin-top: 10%;\n  text-align: center;\n}\n\n#hourTemp {\n  display: inline-block;\n  -webkit-box-flex: 1;\n  -webkit-flex-grow: 1;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  font-size: 0.8em;\n  margin-right: 1%;\n  width: 7%;\n  text-align: center;\n}\n  \n  }\n\n\n`;\n"]},"metadata":{},"sourceType":"module"}