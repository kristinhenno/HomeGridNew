{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Gif.js\";\nimport React, { Component } from 'react';\nimport API from \"./utils/API\";\nimport styled from \"styled-components\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; // import Input from \"./components/Form\";\n// import Button from \"./components/Button\";\n\nclass Gif extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      srcs: [],\n      userinput: \"gif\",\n      srcClicked: \"\",\n      opacity: 0\n    };\n\n    this.handleKeyPress = event => {\n      if (event.key === \"Enter\") {\n        this.GIF();\n      }\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      this.setState({\n        opacity: 1\n      }, () => {\n        if (!this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => this.setState({\n          opacity: 0\n        }), 1000);\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        userinput: event.target.value\n      });\n    };\n\n    this.GIF = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      API.getGifs(this.state.userinput).then(res => this.setState({\n        srcs: res.data.data\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.GIF();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"gifBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"t-nav2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        opacity: this.state.opacity,\n        transition: \"opacity 0.2s\"\n      },\n      id: \"copied\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, \"copied!\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"gifsearch\",\n      placeholder: this.state.userinput,\n      onKeyPress: this.handleKeyPress,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"searchbutton1\",\n      onClick: this.GIF,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"gifResults\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 1\n      }\n    }, this.state.srcs.map(src => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.handleClick,\n      className: \"allGifs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n      className: \"gifs\",\n      text: src.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"gifs\",\n      height: \"80px\",\n      src: src.images.downsized.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }\n    })))))));\n  }\n\n}\n\nconst Style = styled.section`\n\n#copied{\n    margin:0;\n    padding: 0;\n    color: white;\n  position:absolute;\n  top: 1vh;\n  left: 4%;\n}\n\n\n#gifBox{\n    height: 32.33vh;\n    border-radius: 15px;\n    border: 1px solid #black;\n    background-color: #b784cf;\n    color:white;\n    overflow:scroll;\n  \n\n}\n\n.allGifs:hover{\n    cursor:pointer\n}\n\n.gifs{\n\ttext-align: left;\n\n    padding: 1%;\n}\n\n.gifs:hover{\n    cursor: pointer;\n}\n\n.allGifs{\n\t    margin-left: 2%;\n        margin-right: 2%;\n        background-color: white;\n        border-radius: 5px;\n \n    \n}\n\n#gifResults{\n    background-color: white;\n    width: 96%;\n    margin-left: 2%;\n    border-radius: 5px;\n    height: 26vh;\n    overflow: scroll;\n    display:flex;\n    flex-wrap: wrap;\n\n}\n\n.t-nav2{\n    background-color: #b784cf;\n    padding-top: 2%;\n    color: black;\n    display: flex;\n    padding-top: 1vh;\n        \n\n}\n\n.title3{\n    font-family: 'Anton',sans-serif;\n    font-size: 0.9em;\n    margin: 0%;\n    color: white;\n    margin-left: 3%;\n\n}\n\n.gifsearch{\n    height: 20px;\n    width: 19vw;\n    margin-left: 2.5%;\n    color: black;\n    margin-top: -2.5%;\n    border-radius: 5px;\n    border: 0;\n    margin-bottom: 2%;\n    margin-left: 6.5vw;\n}\n\n.searchbutton1{\n    height: 21px;\n    border: none;\n    margin-top: -6%;\n    margin-right: 2.5%;\n    display:none;\n}\n\n.gifsearch:focus{\noutline: none\n}\n`;\nexport default Gif;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Gif.js"],"names":["React","Component","API","styled","CopyToClipboard","Gif","state","srcs","userinput","srcClicked","opacity","handleKeyPress","event","key","GIF","handleClick","preventDefault","setState","timeout","clearTimeout","setTimeout","handleChange","target","value","i","getGifs","then","res","data","catch","err","console","log","componentDidMount","render","transition","map","src","url","images","downsized","Style","section"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from \"./utils/API\";\nimport styled from \"styled-components\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n// import Input from \"./components/Form\";\n// import Button from \"./components/Button\";\n\n\nclass Gif extends Component {\n   state = {\n   srcs: [],\n   userinput: \"gif\",\n   srcClicked: \"\",\n   opacity: 0\n  }\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n        this.GIF();\n    }\n  };\n\n  handleClick= event => {\n    event.preventDefault();\n  this.setState({opacity: 1}, () => {\n      if(!this.timeout)\n          clearTimeout(this.timeout);\n          this.timeout = setTimeout(() => this.setState({opacity:0}),1000);\n });\n}\n\n\nhandleChange = (event) => {\n  this.setState({userinput: event.target.value});\n}\n\n  componentDidMount(){\n    this.GIF();\n  }\n\n     GIF = (i) => {\n         if (i){\n      i.preventDefault();\n    }\n  \n  \n    API.getGifs(this.state.userinput)\n      .then(res =>\n        this.setState({ srcs: res.data.data})\n      \n      )\n      .catch(err => console.log(err));\n  };\n\n\n\n\n\n\n\n\n\n  render() {\n    return (\n    <Style>\n      <div id=\"gifBox\">\n       <div className=\"t-nav2\">\n    <p style={{opacity: this.state.opacity, transition: \"opacity 0.2s\"}} id=\"copied\">copied!</p>\n      <form>\n      <input className=\"gifsearch\"\n              placeholder={this.state.userinput} onKeyPress={this.handleKeyPress} onChange={this.handleChange}\n              />\n                <button className=\"searchbutton1\"\n                onClick={this.GIF}\n              >\n\n              </button>\n              </form>\n      </div>\n<div id=\"gifResults\">\n                {this.state.srcs.map((src) => (\n                  <div  onClick={this.handleClick} className =\"allGifs\">\n                                                 \n\n<CopyToClipboard className=\"gifs\" text={src.url}>\n<img className=\"gifs\" height=\"80px\" src={src.images.downsized.url}/>  \n</CopyToClipboard> \n</div>\n      ))}\n\n</div>\n      </div>\n      </Style>\n    );\n\n  }\n\n}\n\nconst Style = styled.section`\n\n#copied{\n    margin:0;\n    padding: 0;\n    color: white;\n  position:absolute;\n  top: 1vh;\n  left: 4%;\n}\n\n\n#gifBox{\n    height: 32.33vh;\n    border-radius: 15px;\n    border: 1px solid #black;\n    background-color: #b784cf;\n    color:white;\n    overflow:scroll;\n  \n\n}\n\n.allGifs:hover{\n    cursor:pointer\n}\n\n.gifs{\n\ttext-align: left;\n\n    padding: 1%;\n}\n\n.gifs:hover{\n    cursor: pointer;\n}\n\n.allGifs{\n\t    margin-left: 2%;\n        margin-right: 2%;\n        background-color: white;\n        border-radius: 5px;\n \n    \n}\n\n#gifResults{\n    background-color: white;\n    width: 96%;\n    margin-left: 2%;\n    border-radius: 5px;\n    height: 26vh;\n    overflow: scroll;\n    display:flex;\n    flex-wrap: wrap;\n\n}\n\n.t-nav2{\n    background-color: #b784cf;\n    padding-top: 2%;\n    color: black;\n    display: flex;\n    padding-top: 1vh;\n        \n\n}\n\n.title3{\n    font-family: 'Anton',sans-serif;\n    font-size: 0.9em;\n    margin: 0%;\n    color: white;\n    margin-left: 3%;\n\n}\n\n.gifsearch{\n    height: 20px;\n    width: 19vw;\n    margin-left: 2.5%;\n    color: black;\n    margin-top: -2.5%;\n    border-radius: 5px;\n    border: 0;\n    margin-bottom: 2%;\n    margin-left: 6.5vw;\n}\n\n.searchbutton1{\n    height: 21px;\n    border: none;\n    margin-top: -6%;\n    margin-right: 2.5%;\n    display:none;\n}\n\n.gifsearch:focus{\noutline: none\n}\n`\n\n\nexport default Gif;"]},"metadata":{},"sourceType":"module"}