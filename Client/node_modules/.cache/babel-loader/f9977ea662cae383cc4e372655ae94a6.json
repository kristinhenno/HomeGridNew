{"ast":null,"code":"var _jsxFileName = \"/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Checklist.js\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\nimport axios from \"axios\";\nimport { getFromStorage, setInStorage } from \"./utils/storage\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass Checklist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      token: \"\",\n      userId: \"\",\n      list: [],\n      isLoading: true,\n      userInput: \"\",\n      showCompleted: false,\n      disabled: true,\n      currentItem: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n      event.preventDefault();\n    };\n\n    this.handleKeyPress = event => {\n      if (event.key === \"Enter\") {\n        this.addItem(this.state.userInput);\n        this.setState({\n          userInput: \"\"\n        });\n      }\n    };\n\n    this.updateItem = (id, event) => {\n      const newList = this.state.list;\n      var i;\n\n      for (i = 0; i < newList.length; i++) {\n        if (newList[i].id === id) {\n          newList[i].todo = event;\n        }\n      }\n\n      this.updateListState();\n    };\n\n    this.retrieveList = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const id = this.state.userId;\n      API.retrieve(id).then(res => {\n        if (res.data.list.length > 0) {\n          // console.log(res.data.list);\n          const listArray = res.data.list; // console.log(listArray);\n\n          this.setState({\n            list: listArray,\n            isLoading: false\n          });\n        } else {\n          this.setState({\n            isLoading: false\n          });\n        }\n      });\n    };\n\n    this.verify = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const obj = getFromStorage(\"the_main_app\");\n\n      if (obj && obj.token) {\n        const {\n          token\n        } = obj; // Verify token\n\n        API.verify(token).then(res => {\n          if (res) {\n            // console.log(\"token checked\");\n            // console.log(res);\n            this.setState({\n              token: token,\n              userId: res.data.userId\n            }); // console.log(\"loggedIn\");\n\n            this.retrieveList();\n          } else {\n            this.setState({\n              isLoading: true\n            });\n          }\n        });\n      } else {\n        // console.log(\"no token\");\n        this.setState({\n          isLoading: false,\n          isLoggedIn: false\n        });\n      }\n    };\n\n    this.updateListState = i => {\n      if (i) {\n        i.preventDefault();\n      }\n\n      const id = this.state.userId;\n      const list = this.state.list;\n      API.updatelist(id, list).then(res => {\n        if (res) {// console.log(\"list added\");\n        }\n      });\n    };\n\n    this.addItem = item => {\n      const itemArray = this.state.list;\n      const object = {\n        todo: item,\n        date: \"5/02/20\",\n        completed: false,\n        id: itemArray.length + 1,\n        isDeleted: false\n      };\n      itemArray.push(object);\n      this.setState({\n        list: itemArray,\n        userInput: \"\"\n      });\n      this.updateListState();\n    };\n\n    this.setCompleted = id => {\n      const newList = this.state.list;\n      var i;\n\n      for (i = 0; i < newList.length; i++) {\n        if (newList[i].id === id) {\n          if (newList[i].completed) {\n            newList[i].completed = false;\n            setTimeout(() => {\n              this.setState({\n                list: newList\n              });\n            }, 2000);\n            this.updateListState();\n            break;\n          } else {\n            newList[i].completed = true;\n            setTimeout(() => {\n              this.setState({\n                list: newList\n              });\n            }, 2000);\n            this.updateListState();\n            break;\n          }\n        }\n      }\n    };\n\n    this.removeItem = id => {\n      const newList = this.state.list;\n      var i;\n\n      for (i = 0; i < newList.length; i++) {\n        if (newList[i].id === id) {\n          newList[i].isDeleted = true;\n          this.setState({\n            list: newList\n          });\n          break;\n        }\n      }\n    };\n\n    this.addToDo = React.createRef();\n  }\n\n  componentDidMount() {\n    this.verify();\n  }\n\n  render() {\n    // console.log(this.state.userInput);\n    // console.log(this.state.list);\n    return /*#__PURE__*/React.createElement(Style, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"checklist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"p\", {\n      id: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ClipLoader, {\n      size: 40,\n      color: \"#0f9d58\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"checklistButtons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: this.state.showCompleted ? \"navTodoSmall\" : \"navTodo\",\n      onClick: e => this.setState({\n        showCompleted: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \"Tasks\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: this.state.showCompleted ? \"navCompleted\" : \"navCompletedSmall\",\n      onClick: e => this.setState({\n        showCompleted: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, \"Completed\"), this.state.showCompleted ? /*#__PURE__*/React.createElement(\"p\", {\n      id: \"nothing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      id: \"navAdd\",\n      onClick: () => {\n        this.addToDo.current.focus();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }))), this.state.showCompleted ? /*#__PURE__*/React.createElement(\"div\", {\n      id: \"completed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, this.state.list.length > 0 ? this.state.list.reverse().map(item => {\n      // console.log(item);\n      // console.log(item[index].todo);\n      if (item.completed && !item.isDeleted) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"completedItems\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          size: \"small\",\n          onClick: e => this.setCompleted(item.id),\n          type: \"checkbox\",\n          name: item.todo,\n          checkedIcon: /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 46\n            }\n          }),\n          icon: /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 39\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"itemDisplayedCompleted\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 31\n          }\n        }, item.todo), /*#__PURE__*/React.createElement(\"p\", {\n          id: \"deleteTodoCompleted\",\n          onClick: e => this.removeItem(item.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 31\n          }\n        }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"line2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }\n        }));\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      id: \"todos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"todoList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, this.state.list.length > 0 ? this.state.list.map(item => {\n      // console.log(item);\n      if (!item.completed && !item.isDeleted) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"todoItems\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(Checkbox, {\n          size: \"small\",\n          onClick: e => this.setCompleted(item.id),\n          type: \"checkbox\",\n          name: item.todo,\n          icon: /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 43\n            }\n          }),\n          checkedIcon: /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 50\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          spellcheck: \"false\",\n          maxlength: \"90\",\n          onChange: e => {\n            // console.log(e.target.value);\n            this.updateItem(item.id, e.target.value);\n          },\n          defaultValue: item.todo,\n          className: \"itemDisplayed\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          id: \"deleteTodo\",\n          onClick: e => this.removeItem(item.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 35\n          }\n        }, \"x\")), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"line\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 33\n          }\n        }));\n      }\n    }) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"addButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      size: \"small\" // onClick={e => this.setCompleted(item.id)}\n      ,\n      type: \"checkbox\" // name={item.todo}\n      ,\n      onClick: e => this.addItem(this.state.userInput),\n      icon: /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 29\n        }\n      }),\n      checkedIcon: /*#__PURE__*/React.createElement(AddCircleOutlineIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 36\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.addToDo,\n      value: this.state.userInput || \"\",\n      onKeyPress: this.handleKeyPress,\n      id: \"additeminput\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }))))));\n  }\n\n}\n\nconst Style = styled.section`\n  #spinner {\n    text-align: center;\n    margin-top: 11vh;\n  }\n  #line {\n    width: 81%;\n    margin-left: 9%;\n    border-bottom: 1px solid lightgray;\n    /* position: absolute; */\n    /* margin-bottom: -4%; */\n    margin-top: -1.5%;\n  }\n  #line2 {\n    width: 79.2%;\n    margin-left: 12%;\n    border-bottom: 1px solid lightgray;\n    margin-top: -1.5%;\n  }\n\n  #nothing {\n    display: inline-block;\n    margin: 0;\n  }\n  #navAdd {\n    margin: 0;\n    display: inline-block;\n    cursor: pointer;\n    color: rgba(0, 0, 0, 0.54);\n    float: right;\n    margin: 2% 4% 0 0;\n  }\n  #navTodo {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1.5% 2% 5%;\n    display: inline-block;\n    cursor: pointer;\n    color: #db4437;\n    border-bottom: 1px solid #db4437;\n  }\n\n  #navTodoSmall {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1.5% 2% 5%;\n    display: inline-block;\n    cursor: pointer;\n    font-size: 0.8em;\n  }\n\n  #navCompleted {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1% 2% 0%;\n    display: inline-block;\n    cursor: pointer;\n    color: #0f9d58;\n    border-bottom: 1px solid #0f9d58;\n  }\n  #navCompletedSmall {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1% 2% 0%;\n    font-size: 0.7em;\n    display: inline-block;\n    cursor: pointer;\n    font-size: 0.8em;\n  }\n\n  #additeminput {\n    border: none;\n    width: 85%;\n    background-color: transparent;\n  }\n  #additeminput:focus {\n    outline: none;\n  }\n  #deleteTodo {\n    display: none;\n    padding-right: 8%;\n    margin-top: 2%;\n    margin-bottom: 0%;\n  }\n  #deleteTodoCompleted {\n    display: none;\n    padding-right: 8%;\n    margin-top: 1.5%;\n    margin-bottom: 0%;\n  }\n  #deleteTodoCompleted:hover {\n    cursor: pointer;\n    display: block;\n  }\n  #deleteTodo:hover {\n    cursor: pointer;\n    display: block;\n  }\n  .itemDisplayed:focus + #deleteTodo {\n    display: block;\n  }\n\n  .itemDisplayedCompleted:hover + #deleteTodoCompleted {\n    display: block;\n  }\n\n  .itemDisplayed:focus {\n    outline: none;\n  }\n\n  #checklistButtons {\n    /* display: flex;\n    flex-direction: row;\n    justify-content: space-between; */\n    margin-top: 0.4vh;\n  }\n  .todoItems .MuiCheckbox-colorSecondary.Mui-checked {\n    color: #35c44b;\n  }\n  .todoItems .MuiIconButton-colorSecondary:hover {\n    background-color: rgba(53, 196, 75, 0.04);\n  }\n\n  #addButton .MuiIconButton-colorSecondary:hover {\n    background-color: rgba(53, 196, 75, 0.04);\n  }\n\n  #addButton .MuiCheckbox-colorSecondary.Mui-checked {\n    color: rgba(0, 0, 0, 0.54);\n  }\n\n  #addButton {\n    margin-top: -2%;\n  }\n\n  .itemDisplayed {\n    width: 79%;\n    padding: 0;\n    /* margin-top: 2.5%; */\n    /* margin-bottom: 2.5%; */\n    resize: none;\n    border: none;\n    font-size: 12px;\n    font-family: sans-serif;\n    background-color: transparent;\n  }\n\n  .itemDisplayedCompleted {\n    width: 79%;\n    padding: 0;\n    /* margin-top: 2.5%; */\n    /* margin-bottom: 2.5%; */\n    resize: none;\n    border: none;\n    font-size: 12px;\n    font-family: sans-serif;\n    background-color: transparent;\n    margin-top: 0.7em;\n    margin-bottom: 0.2em;\n  }\n  .todoItems {\n    display: flex;\n    margin-top: -1.8%;\n    /* padding-left: 3%; */\n  }\n\n  .completedItems {\n    display: flex;\n    padding-left: 3%;\n    margin-top: -1.7%;\n  }\n  #checklist {\n    /* overflow: scroll; */\n    height: 32.33vh;\n    border-radius: 15px;\n    /* border: 0.8vh solid #ebeef2; */\n    background-color: white;\n    border: 1px solid #adadad;\n  }\n  #todoList {\n    display: flex;\n  }\n\n  #todos {\n    height: 25vh;\n    overflow: scroll;\n    width: 95%;\n    padding-left: 3%;\n  }\n\n  .PrivateSwitchBase-root-16 {\n    padding: 7px;\n  }\n  #todo {\n    width: 100%;\n  }\n\n  #completed {\n    height: 25vh;\n    overflow: scroll;\n    width: 97%;\n  }\n`;\nexport default Checklist;","map":{"version":3,"sources":["/Users/kristinhenno/Documents/Repositories/HomeGrid/home/client/src/Checklist.js"],"names":["React","Component","styled","API","axios","getFromStorage","setInStorage","Checkbox","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","createMuiTheme","AddCircleOutlineIcon","ClipLoader","Checklist","constructor","props","state","token","userId","list","isLoading","userInput","showCompleted","disabled","currentItem","handleChange","event","setState","target","value","preventDefault","handleKeyPress","key","addItem","updateItem","id","newList","i","length","todo","updateListState","retrieveList","retrieve","then","res","data","listArray","verify","obj","isLoggedIn","updatelist","item","itemArray","object","date","completed","isDeleted","push","setCompleted","setTimeout","removeItem","addToDo","createRef","componentDidMount","render","e","current","focus","reverse","map","Style","section"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,iBAA7C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,sBAAP,MAAmC,uCAAnC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;AAEA,MAAMC,SAAN,SAAwBb,KAAK,CAACC,SAA9B,CAAwC;AAYtCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAXnBC,KAWmB,GAXX;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,SAAS,EAAE,IAJL;AAKNC,MAAAA,SAAS,EAAE,EALL;AAMNC,MAAAA,aAAa,EAAE,KANT;AAONC,MAAAA,QAAQ,EAAE,IAPJ;AAQNC,MAAAA,WAAW,EAAE;AARP,KAWW;;AAAA,SAKnBC,YALmB,GAKJC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AACZN,QAAAA,SAAS,EAAEK,KAAK,CAACE,MAAN,CAAaC;AADZ,OAAd;AAGAH,MAAAA,KAAK,CAACI,cAAN;AACD,KAVkB;;AAAA,SAYnBC,cAZmB,GAYFL,KAAK,IAAI;AACxB,UAAIA,KAAK,CAACM,GAAN,KAAc,OAAlB,EAA2B;AACzB,aAAKC,OAAL,CAAa,KAAKjB,KAAL,CAAWK,SAAxB;AACA,aAAKM,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE;AADC,SAAd;AAGD;AACF,KAnBkB;;AAAA,SAqBnBa,UArBmB,GAqBN,CAACC,EAAD,EAAKT,KAAL,KAAe;AAC1B,YAAMU,OAAO,GAAG,KAAKpB,KAAL,CAAWG,IAA3B;AACA,UAAIkB,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,OAAO,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAID,OAAO,CAACC,CAAD,CAAP,CAAWF,EAAX,KAAkBA,EAAtB,EAA0B;AACxBC,UAAAA,OAAO,CAACC,CAAD,CAAP,CAAWE,IAAX,GAAkBb,KAAlB;AACD;AACF;;AACD,WAAKc,eAAL;AACD,KA9BkB;;AAAA,SAgCnBC,YAhCmB,GAgCJJ,CAAC,IAAI;AAClB,UAAIA,CAAJ,EAAO;AACLA,QAAAA,CAAC,CAACP,cAAF;AACD;;AACD,YAAMK,EAAE,GAAG,KAAKnB,KAAL,CAAWE,MAAtB;AACAf,MAAAA,GAAG,CAACuC,QAAJ,CAAaP,EAAb,EAAiBQ,IAAjB,CAAsBC,GAAG,IAAI;AAC3B,YAAIA,GAAG,CAACC,IAAJ,CAAS1B,IAAT,CAAcmB,MAAd,GAAuB,CAA3B,EAA8B;AAC5B;AACA,gBAAMQ,SAAS,GAAGF,GAAG,CAACC,IAAJ,CAAS1B,IAA3B,CAF4B,CAI5B;;AAEA,eAAKQ,QAAL,CAAc;AACZR,YAAAA,IAAI,EAAE2B,SADM;AAEZ1B,YAAAA,SAAS,EAAE;AAFC,WAAd;AAID,SAVD,MAUO;AACL,eAAKO,QAAL,CAAc;AACZP,YAAAA,SAAS,EAAE;AADC,WAAd;AAGD;AACF,OAhBD;AAiBD,KAtDkB;;AAAA,SAwDnB2B,MAxDmB,GAwDVV,CAAC,IAAI;AACZ,UAAIA,CAAJ,EAAO;AACLA,QAAAA,CAAC,CAACP,cAAF;AACD;;AACD,YAAMkB,GAAG,GAAG3C,cAAc,CAAC,cAAD,CAA1B;;AACA,UAAI2C,GAAG,IAAIA,GAAG,CAAC/B,KAAf,EAAsB;AACpB,cAAM;AAAEA,UAAAA;AAAF,YAAY+B,GAAlB,CADoB,CAEpB;;AACA7C,QAAAA,GAAG,CAAC4C,MAAJ,CAAW9B,KAAX,EAAkB0B,IAAlB,CAAuBC,GAAG,IAAI;AAC5B,cAAIA,GAAJ,EAAS;AACP;AACA;AACA,iBAAKjB,QAAL,CAAc;AACZV,cAAAA,KAAK,EAAEA,KADK;AAEZC,cAAAA,MAAM,EAAE0B,GAAG,CAACC,IAAJ,CAAS3B;AAFL,aAAd,EAHO,CAOP;;AACA,iBAAKuB,YAAL;AACD,WATD,MASO;AACL,iBAAKd,QAAL,CAAc;AACZP,cAAAA,SAAS,EAAE;AADC,aAAd;AAGD;AACF,SAfD;AAgBD,OAnBD,MAmBO;AACL;AACA,aAAKO,QAAL,CAAc;AACZP,UAAAA,SAAS,EAAE,KADC;AAEZ6B,UAAAA,UAAU,EAAE;AAFA,SAAd;AAID;AACF,KAvFkB;;AAAA,SAyFnBT,eAzFmB,GAyFDH,CAAC,IAAI;AACrB,UAAIA,CAAJ,EAAO;AACLA,QAAAA,CAAC,CAACP,cAAF;AACD;;AACD,YAAMK,EAAE,GAAG,KAAKnB,KAAL,CAAWE,MAAtB;AACA,YAAMC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAxB;AAEAhB,MAAAA,GAAG,CAAC+C,UAAJ,CAAef,EAAf,EAAmBhB,IAAnB,EAAyBwB,IAAzB,CAA8BC,GAAG,IAAI;AACnC,YAAIA,GAAJ,EAAS,CACP;AACD;AACF,OAJD;AAKD,KArGkB;;AAAA,SAuGnBX,OAvGmB,GAuGTkB,IAAI,IAAI;AAChB,YAAMC,SAAS,GAAG,KAAKpC,KAAL,CAAWG,IAA7B;AACA,YAAMkC,MAAM,GAAG;AACbd,QAAAA,IAAI,EAAEY,IADO;AAEbG,QAAAA,IAAI,EAAE,SAFO;AAGbC,QAAAA,SAAS,EAAE,KAHE;AAIbpB,QAAAA,EAAE,EAAEiB,SAAS,CAACd,MAAV,GAAmB,CAJV;AAKbkB,QAAAA,SAAS,EAAE;AALE,OAAf;AAOAJ,MAAAA,SAAS,CAACK,IAAV,CAAeJ,MAAf;AACA,WAAK1B,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAEiC,SADM;AAEZ/B,QAAAA,SAAS,EAAE;AAFC,OAAd;AAIA,WAAKmB,eAAL;AACD,KAtHkB;;AAAA,SAwHnBkB,YAxHmB,GAwHJvB,EAAE,IAAI;AACnB,YAAMC,OAAO,GAAG,KAAKpB,KAAL,CAAWG,IAA3B;AACA,UAAIkB,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,OAAO,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAID,OAAO,CAACC,CAAD,CAAP,CAAWF,EAAX,KAAkBA,EAAtB,EAA0B;AACxB,cAAIC,OAAO,CAACC,CAAD,CAAP,CAAWkB,SAAf,EAA0B;AACxBnB,YAAAA,OAAO,CAACC,CAAD,CAAP,CAAWkB,SAAX,GAAuB,KAAvB;AACAI,YAAAA,UAAU,CAAC,MAAM;AACf,mBAAKhC,QAAL,CAAc;AACZR,gBAAAA,IAAI,EAAEiB;AADM,eAAd;AAGD,aAJS,EAIP,IAJO,CAAV;AAKA,iBAAKI,eAAL;AACA;AACD,WATD,MASO;AACLJ,YAAAA,OAAO,CAACC,CAAD,CAAP,CAAWkB,SAAX,GAAuB,IAAvB;AACAI,YAAAA,UAAU,CAAC,MAAM;AACf,mBAAKhC,QAAL,CAAc;AACZR,gBAAAA,IAAI,EAAEiB;AADM,eAAd;AAGD,aAJS,EAIP,IAJO,CAAV;AAKA,iBAAKI,eAAL;AACA;AACD;AACF;AACF;AACF,KAlJkB;;AAAA,SAoJnBoB,UApJmB,GAoJNzB,EAAE,IAAI;AACjB,YAAMC,OAAO,GAAG,KAAKpB,KAAL,CAAWG,IAA3B;AACA,UAAIkB,CAAJ;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,OAAO,CAACE,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,YAAID,OAAO,CAACC,CAAD,CAAP,CAAWF,EAAX,KAAkBA,EAAtB,EAA0B;AACxBC,UAAAA,OAAO,CAACC,CAAD,CAAP,CAAWmB,SAAX,GAAuB,IAAvB;AAEA,eAAK7B,QAAL,CAAc;AACZR,YAAAA,IAAI,EAAEiB;AADM,WAAd;AAIA;AACD;AACF;AACF,KAlKkB;;AAEjB,SAAKyB,OAAL,GAAe7D,KAAK,CAAC8D,SAAN,EAAf;AACD;;AAiKDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,MAAL;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP;AACA;AACA,wBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhD,KAAL,CAAWI,SAAX,gBACC;AAAG,MAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,EAAlB;AAAsB,MAAA,KAAK,EAAE,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWM,aAAX,GAA2B,cAA3B,GAA4C,SADlD;AAEE,MAAA,OAAO,EAAE2C,CAAC,IACR,KAAKtC,QAAL,CAAc;AACZL,QAAAA,aAAa,EAAE;AADH,OAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAWE;AACE,MAAA,EAAE,EACA,KAAKN,KAAL,CAAWM,aAAX,GACI,cADJ,GAEI,mBAJR;AAME,MAAA,OAAO,EAAE2C,CAAC,IACR,KAAKtC,QAAL,CAAc;AACZL,QAAAA,aAAa,EAAE;AADH,OAAd,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,EAyBG,KAAKN,KAAL,CAAWM,aAAX,gBACC;AAAG,MAAA,EAAE,EAAC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBAGC;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKuC,OAAL,CAAaK,OAAb,CAAqBC,KAArB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME,oBAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA5BJ,CADF,EAuCG,KAAKnD,KAAL,CAAWM,aAAX,gBACC;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,KAAL,CAAWG,IAAX,CAAgBmB,MAAhB,GAAyB,CAAzB,GACC,KAAKtB,KAAL,CAAWG,IAAX,CAAgBiD,OAAhB,GAA0BC,GAA1B,CAA8BlB,IAAI,IAAI;AACpC;AACA;AACA,UAAIA,IAAI,CAACI,SAAL,IAAkB,CAACJ,IAAI,CAACK,SAA5B,EAAuC;AACrC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAES,CAAC,IAAI,KAAKP,YAAL,CAAkBP,IAAI,CAAChB,EAAvB,CAFhB;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,IAAI,EAAEgB,IAAI,CAACZ,IAJb;AAKE,UAAA,WAAW,eAAE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALf;AAME,UAAA,IAAI,eAAE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eASE;AAAG,UAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGY,IAAI,CAACZ,IADR,CATF,eAYE;AACE,UAAA,EAAE,EAAC,qBADL;AAEE,UAAA,OAAO,EAAE0B,CAAC,IAAI,KAAKL,UAAL,CAAgBT,IAAI,CAAChB,EAArB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF,CADF,eAoBE;AAAK,UAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApBF,CADF;AAwBD;AACF,KA7BD,CADD,gBAgCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCJ,CADD,gBAsCC;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKnB,KAAL,CAAWG,IAAX,CAAgBmB,MAAhB,GAAyB,CAAzB,GACC,KAAKtB,KAAL,CAAWG,IAAX,CAAgBkD,GAAhB,CAAoBlB,IAAI,IAAI;AAC1B;AACA,UAAI,CAACA,IAAI,CAACI,SAAN,IAAmB,CAACJ,IAAI,CAACK,SAA7B,EAAwC;AACtC,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,OAAO,EAAES,CAAC,IAAI,KAAKP,YAAL,CAAkBP,IAAI,CAAChB,EAAvB,CAFhB;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,IAAI,EAAEgB,IAAI,CAACZ,IAJb;AAKE,UAAA,IAAI,eAAE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALR;AAME,UAAA,WAAW,eAAE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eASE;AACE,UAAA,UAAU,EAAC,OADb;AAEE,UAAA,SAAS,EAAC,IAFZ;AAGE,UAAA,QAAQ,EAAE0B,CAAC,IAAI;AACb;AACA,iBAAK/B,UAAL,CAAgBiB,IAAI,CAAChB,EAArB,EAAyB8B,CAAC,CAACrC,MAAF,CAASC,KAAlC;AACD,WANH;AAOE,UAAA,YAAY,EAAEsB,IAAI,CAACZ,IAPrB;AAQE,UAAA,SAAS,EAAC,eARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATF,eAoBE;AACE,UAAA,EAAE,EAAC,YADL;AAEE,UAAA,OAAO,EAAE0B,CAAC,IAAI,KAAKL,UAAL,CAAgBT,IAAI,CAAChB,EAArB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBF,CADF,eA4BE;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA5BF,CADF;AAgCD;AACF,KApCD,CADD,gBAuCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCJ,CADF,CADF,eA8CE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAC,OADP,CAEE;AAFF;AAGE,MAAA,IAAI,EAAC,UAHP,CAIE;AAJF;AAKE,MAAA,OAAO,EAAE8B,CAAC,IAAI,KAAKhC,OAAL,CAAa,KAAKjB,KAAL,CAAWK,SAAxB,CALhB;AAME,MAAA,IAAI,eAAE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANR;AAOE,MAAA,WAAW,eAAE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AACE,MAAA,GAAG,EAAE,KAAKwC,OADZ;AAEE,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWK,SAAX,IAAwB,EAFjC;AAGE,MAAA,UAAU,EAAE,KAAKU,cAHnB;AAIE,MAAA,EAAE,EAAC,cAJL;AAKE,MAAA,QAAQ,EAAE,KAAKN,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CA9CF,CA7EJ,CANJ,CADF,CADF;AA+JD;;AAtVqC;;AAyVxC,MAAM6C,KAAK,GAAGpE,MAAM,CAACqE,OAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA7B;AA4MA,eAAe1D,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport API from \"./utils/API\";\nimport axios from \"axios\";\nimport { getFromStorage, setInStorage } from \"./utils/storage\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport RadioButtonUncheckedIcon from \"@material-ui/icons/RadioButtonUnchecked\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nclass Checklist extends React.Component {\n  state = {\n    token: \"\",\n    userId: \"\",\n    list: [],\n    isLoading: true,\n    userInput: \"\",\n    showCompleted: false,\n    disabled: true,\n    currentItem: \"\"\n  };\n\n  constructor(props) {\n    super(props);\n    this.addToDo = React.createRef();\n  }\n\n  handleChange = event => {\n    this.setState({\n      userInput: event.target.value\n    });\n    event.preventDefault();\n  };\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      this.addItem(this.state.userInput);\n      this.setState({\n        userInput: \"\"\n      });\n    }\n  };\n\n  updateItem = (id, event) => {\n    const newList = this.state.list;\n    var i;\n    for (i = 0; i < newList.length; i++) {\n      if (newList[i].id === id) {\n        newList[i].todo = event;\n      }\n    }\n    this.updateListState();\n  };\n\n  retrieveList = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const id = this.state.userId;\n    API.retrieve(id).then(res => {\n      if (res.data.list.length > 0) {\n        // console.log(res.data.list);\n        const listArray = res.data.list;\n\n        // console.log(listArray);\n\n        this.setState({\n          list: listArray,\n          isLoading: false\n        });\n      } else {\n        this.setState({\n          isLoading: false\n        });\n      }\n    });\n  };\n\n  verify = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const obj = getFromStorage(\"the_main_app\");\n    if (obj && obj.token) {\n      const { token } = obj;\n      // Verify token\n      API.verify(token).then(res => {\n        if (res) {\n          // console.log(\"token checked\");\n          // console.log(res);\n          this.setState({\n            token: token,\n            userId: res.data.userId\n          });\n          // console.log(\"loggedIn\");\n          this.retrieveList();\n        } else {\n          this.setState({\n            isLoading: true\n          });\n        }\n      });\n    } else {\n      // console.log(\"no token\");\n      this.setState({\n        isLoading: false,\n        isLoggedIn: false\n      });\n    }\n  };\n\n  updateListState = i => {\n    if (i) {\n      i.preventDefault();\n    }\n    const id = this.state.userId;\n    const list = this.state.list;\n\n    API.updatelist(id, list).then(res => {\n      if (res) {\n        // console.log(\"list added\");\n      }\n    });\n  };\n\n  addItem = item => {\n    const itemArray = this.state.list;\n    const object = {\n      todo: item,\n      date: \"5/02/20\",\n      completed: false,\n      id: itemArray.length + 1,\n      isDeleted: false\n    };\n    itemArray.push(object);\n    this.setState({\n      list: itemArray,\n      userInput: \"\"\n    });\n    this.updateListState();\n  };\n\n  setCompleted = id => {\n    const newList = this.state.list;\n    var i;\n    for (i = 0; i < newList.length; i++) {\n      if (newList[i].id === id) {\n        if (newList[i].completed) {\n          newList[i].completed = false;\n          setTimeout(() => {\n            this.setState({\n              list: newList\n            });\n          }, 2000);\n          this.updateListState();\n          break;\n        } else {\n          newList[i].completed = true;\n          setTimeout(() => {\n            this.setState({\n              list: newList\n            });\n          }, 2000);\n          this.updateListState();\n          break;\n        }\n      }\n    }\n  };\n\n  removeItem = id => {\n    const newList = this.state.list;\n    var i;\n    for (i = 0; i < newList.length; i++) {\n      if (newList[i].id === id) {\n        newList[i].isDeleted = true;\n\n        this.setState({\n          list: newList\n        });\n\n        break;\n      }\n    }\n  };\n\n  componentDidMount() {\n    this.verify();\n  }\n\n  render() {\n    // console.log(this.state.userInput);\n    // console.log(this.state.list);\n    return (\n      <Style>\n        <div id=\"checklist\">\n          {this.state.isLoading ? (\n            <p id=\"spinner\">\n              <ClipLoader size={40} color={\"#0f9d58\"} />\n            </p>\n          ) : (\n            <div>\n              <div id=\"checklistButtons\">\n                <p\n                  id={this.state.showCompleted ? \"navTodoSmall\" : \"navTodo\"}\n                  onClick={e =>\n                    this.setState({\n                      showCompleted: false\n                    })\n                  }\n                >\n                  Tasks\n                </p>\n                <p\n                  id={\n                    this.state.showCompleted\n                      ? \"navCompleted\"\n                      : \"navCompletedSmall\"\n                  }\n                  onClick={e =>\n                    this.setState({\n                      showCompleted: true\n                    })\n                  }\n                >\n                  Completed\n                </p>\n                {this.state.showCompleted ? (\n                  <p id=\"nothing\"></p>\n                ) : (\n                  <p\n                    id=\"navAdd\"\n                    onClick={() => {\n                      this.addToDo.current.focus();\n                    }}\n                  >\n                    <AddCircleOutlineIcon fontSize=\"small\" />\n                  </p>\n                )}\n              </div>\n              {this.state.showCompleted ? (\n                <div id=\"completed\">\n                  {this.state.list.length > 0 ? (\n                    this.state.list.reverse().map(item => {\n                      // console.log(item);\n                      // console.log(item[index].todo);\n                      if (item.completed && !item.isDeleted) {\n                        return (\n                          <div>\n                            <div className=\"completedItems\">\n                              <Checkbox\n                                size=\"small\"\n                                onClick={e => this.setCompleted(item.id)}\n                                type=\"checkbox\"\n                                name={item.todo}\n                                checkedIcon={<RadioButtonUncheckedIcon />}\n                                icon={<RadioButtonCheckedIcon />}\n                              />\n                              <p className=\"itemDisplayedCompleted\">\n                                {item.todo}\n                              </p>\n                              <p\n                                id=\"deleteTodoCompleted\"\n                                onClick={e => this.removeItem(item.id)}\n                              >\n                                x\n                              </p>\n                            </div>\n                            <div id=\"line2\"></div>\n                          </div>\n                        );\n                      }\n                    })\n                  ) : (\n                    <p></p>\n                  )}\n                </div>\n              ) : (\n                <div id=\"todos\">\n                  <div id=\"todoList\">\n                    <div id=\"todo\">\n                      {this.state.list.length > 0 ? (\n                        this.state.list.map(item => {\n                          // console.log(item);\n                          if (!item.completed && !item.isDeleted) {\n                            return (\n                              <div>\n                                <div className=\"todoItems\">\n                                  <Checkbox\n                                    size=\"small\"\n                                    onClick={e => this.setCompleted(item.id)}\n                                    type=\"checkbox\"\n                                    name={item.todo}\n                                    icon={<RadioButtonUncheckedIcon />}\n                                    checkedIcon={<RadioButtonCheckedIcon />}\n                                  />\n                                  <input\n                                    spellcheck=\"false\"\n                                    maxlength=\"90\"\n                                    onChange={e => {\n                                      // console.log(e.target.value);\n                                      this.updateItem(item.id, e.target.value);\n                                    }}\n                                    defaultValue={item.todo}\n                                    className=\"itemDisplayed\"\n                                  />\n\n                                  <p\n                                    id=\"deleteTodo\"\n                                    onClick={e => this.removeItem(item.id)}\n                                  >\n                                    x\n                                  </p>\n                                </div>\n                                <div id=\"line\"></div>\n                              </div>\n                            );\n                          }\n                        })\n                      ) : (\n                        <p></p>\n                      )}\n                    </div>\n                  </div>\n                  <div id=\"addButton\">\n                    <Checkbox\n                      size=\"small\"\n                      // onClick={e => this.setCompleted(item.id)}\n                      type=\"checkbox\"\n                      // name={item.todo}\n                      onClick={e => this.addItem(this.state.userInput)}\n                      icon={<AddCircleOutlineIcon />}\n                      checkedIcon={<AddCircleOutlineIcon />}\n                    />\n                    <input\n                      ref={this.addToDo}\n                      value={this.state.userInput || \"\"}\n                      onKeyPress={this.handleKeyPress}\n                      id=\"additeminput\"\n                      onChange={this.handleChange}\n                    ></input>\n                    {/* <button onClick={e => this.addItem(this.state.userInput)}>\n                      add\n                    </button> */}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </Style>\n    );\n  }\n}\n\nconst Style = styled.section`\n  #spinner {\n    text-align: center;\n    margin-top: 11vh;\n  }\n  #line {\n    width: 81%;\n    margin-left: 9%;\n    border-bottom: 1px solid lightgray;\n    /* position: absolute; */\n    /* margin-bottom: -4%; */\n    margin-top: -1.5%;\n  }\n  #line2 {\n    width: 79.2%;\n    margin-left: 12%;\n    border-bottom: 1px solid lightgray;\n    margin-top: -1.5%;\n  }\n\n  #nothing {\n    display: inline-block;\n    margin: 0;\n  }\n  #navAdd {\n    margin: 0;\n    display: inline-block;\n    cursor: pointer;\n    color: rgba(0, 0, 0, 0.54);\n    float: right;\n    margin: 2% 4% 0 0;\n  }\n  #navTodo {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1.5% 2% 5%;\n    display: inline-block;\n    cursor: pointer;\n    color: #db4437;\n    border-bottom: 1px solid #db4437;\n  }\n\n  #navTodoSmall {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1.5% 2% 5%;\n    display: inline-block;\n    cursor: pointer;\n    font-size: 0.8em;\n  }\n\n  #navCompleted {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1% 2% 0%;\n    display: inline-block;\n    cursor: pointer;\n    color: #0f9d58;\n    border-bottom: 1px solid #0f9d58;\n  }\n  #navCompletedSmall {\n    font-family: \"Balsamiq Sans\", cursive;\n    margin: 0;\n    margin: 2% 1% 2% 0%;\n    font-size: 0.7em;\n    display: inline-block;\n    cursor: pointer;\n    font-size: 0.8em;\n  }\n\n  #additeminput {\n    border: none;\n    width: 85%;\n    background-color: transparent;\n  }\n  #additeminput:focus {\n    outline: none;\n  }\n  #deleteTodo {\n    display: none;\n    padding-right: 8%;\n    margin-top: 2%;\n    margin-bottom: 0%;\n  }\n  #deleteTodoCompleted {\n    display: none;\n    padding-right: 8%;\n    margin-top: 1.5%;\n    margin-bottom: 0%;\n  }\n  #deleteTodoCompleted:hover {\n    cursor: pointer;\n    display: block;\n  }\n  #deleteTodo:hover {\n    cursor: pointer;\n    display: block;\n  }\n  .itemDisplayed:focus + #deleteTodo {\n    display: block;\n  }\n\n  .itemDisplayedCompleted:hover + #deleteTodoCompleted {\n    display: block;\n  }\n\n  .itemDisplayed:focus {\n    outline: none;\n  }\n\n  #checklistButtons {\n    /* display: flex;\n    flex-direction: row;\n    justify-content: space-between; */\n    margin-top: 0.4vh;\n  }\n  .todoItems .MuiCheckbox-colorSecondary.Mui-checked {\n    color: #35c44b;\n  }\n  .todoItems .MuiIconButton-colorSecondary:hover {\n    background-color: rgba(53, 196, 75, 0.04);\n  }\n\n  #addButton .MuiIconButton-colorSecondary:hover {\n    background-color: rgba(53, 196, 75, 0.04);\n  }\n\n  #addButton .MuiCheckbox-colorSecondary.Mui-checked {\n    color: rgba(0, 0, 0, 0.54);\n  }\n\n  #addButton {\n    margin-top: -2%;\n  }\n\n  .itemDisplayed {\n    width: 79%;\n    padding: 0;\n    /* margin-top: 2.5%; */\n    /* margin-bottom: 2.5%; */\n    resize: none;\n    border: none;\n    font-size: 12px;\n    font-family: sans-serif;\n    background-color: transparent;\n  }\n\n  .itemDisplayedCompleted {\n    width: 79%;\n    padding: 0;\n    /* margin-top: 2.5%; */\n    /* margin-bottom: 2.5%; */\n    resize: none;\n    border: none;\n    font-size: 12px;\n    font-family: sans-serif;\n    background-color: transparent;\n    margin-top: 0.7em;\n    margin-bottom: 0.2em;\n  }\n  .todoItems {\n    display: flex;\n    margin-top: -1.8%;\n    /* padding-left: 3%; */\n  }\n\n  .completedItems {\n    display: flex;\n    padding-left: 3%;\n    margin-top: -1.7%;\n  }\n  #checklist {\n    /* overflow: scroll; */\n    height: 32.33vh;\n    border-radius: 15px;\n    /* border: 0.8vh solid #ebeef2; */\n    background-color: white;\n    border: 1px solid #adadad;\n  }\n  #todoList {\n    display: flex;\n  }\n\n  #todos {\n    height: 25vh;\n    overflow: scroll;\n    width: 95%;\n    padding-left: 3%;\n  }\n\n  .PrivateSwitchBase-root-16 {\n    padding: 7px;\n  }\n  #todo {\n    width: 100%;\n  }\n\n  #completed {\n    height: 25vh;\n    overflow: scroll;\n    width: 97%;\n  }\n`;\n\nexport default Checklist;\n"]},"metadata":{},"sourceType":"module"}