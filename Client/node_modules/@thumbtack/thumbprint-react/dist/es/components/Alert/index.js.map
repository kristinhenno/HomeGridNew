{"version":3,"file":"index.js","sources":["../../../../components/Alert/index.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { AlertCheck, AlertInfo, AlertWarning } from '../../icons/index.jsx';\n\nimport styles from './index.module.scss';\n\ninterface BannerPropTypes {\n    /**\n     * Text within the alert\n     */\n    children?: React.ReactNode;\n    /**\n     * Defines the style of the alert\n     */\n    theme?: 'good' | 'bad' | 'warning' | 'info';\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nexport function BannerAlert({\n    children = null,\n    theme = 'info',\n    dataTest,\n}: BannerPropTypes): JSX.Element {\n    return (\n        <div\n            className={classNames({\n                [styles.root]: true,\n                [styles.banner]: true,\n                [styles.good]: theme === 'good',\n                [styles.bad]: theme === 'bad',\n                [styles.warning]: theme === 'warning',\n                [styles.info]: theme === 'info',\n            })}\n            data-test={dataTest}\n        >\n            <div className={styles.text}>{children}</div>\n        </div>\n    );\n}\n\ninterface InPagePropTypes {\n    /**\n     * Text within the alert\n     */\n    children?: React.ReactNode;\n    /**\n     * Defines the style of the alert\n     */\n    theme?: 'good' | 'bad' | 'warning' | 'info';\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nconst ALERT_ICONS = {\n    good: <AlertCheck className={styles.icon} />,\n    bad: <AlertWarning className={styles.icon} />,\n    warning: <AlertWarning className={styles.icon} />,\n    info: <AlertInfo className={styles.icon} />,\n};\n\nexport function InPageAlert({\n    children = null,\n    theme = 'info',\n    dataTest,\n}: InPagePropTypes): JSX.Element {\n    return (\n        <div\n            className={classNames({\n                [styles.root]: true,\n                [styles.good]: theme === 'good',\n                [styles.bad]: theme === 'bad',\n                [styles.warning]: theme === 'warning',\n                [styles.info]: theme === 'info',\n            })}\n            data-test={dataTest}\n        >\n            {ALERT_ICONS[theme]}\n            <div className={styles.text}>{children}</div>\n        </div>\n    );\n}\n"],"names":["BannerAlert","children","theme","dataTest","classNames","styles","root","banner","good","bad","warning","info","text","ALERT_ICONS","icon","InPageAlert"],"mappings":";;;;;;;;;;;AAqBO,SAASA,WAAT,OAI0B;;;2BAH7BC,QAG6B;MAH7BA,QAG6B,8BAHlB,IAGkB;wBAF7BC,KAE6B;MAF7BA,KAE6B,2BAFrB,MAEqB;MAD7BC,QAC6B,QAD7BA,QAC6B;SAEzB;IACI,SAAS,EAAEC,UAAU,iDAChBC,MAAM,CAACC,IADS,EACF,IADE,gCAEhBD,MAAM,CAACE,MAFS,EAEA,IAFA,gCAGhBF,MAAM,CAACG,IAHS,EAGFN,KAAK,KAAK,MAHR,gCAIhBG,MAAM,CAACI,GAJS,EAIHP,KAAK,KAAK,KAJP,gCAKhBG,MAAM,CAACK,OALS,EAKCR,KAAK,KAAK,SALX,gCAMhBG,MAAM,CAACM,IANS,EAMFT,KAAK,KAAK,MANR,gBADzB;iBASeC;KAEX;IAAK,SAAS,EAAEE,MAAM,CAACO;KAAOX,QAA9B,CAXJ,CADJ;;AAgCJ,IAAMY,WAAW,GAAG;EAChBL,IAAI,EAAE,oBAAC,UAAD;IAAY,SAAS,EAAEH,MAAM,CAACS;IADpB;EAEhBL,GAAG,EAAE,oBAAC,YAAD;IAAc,SAAS,EAAEJ,MAAM,CAACS;IAFrB;EAGhBJ,OAAO,EAAE,oBAAC,YAAD;IAAc,SAAS,EAAEL,MAAM,CAACS;IAHzB;EAIhBH,IAAI,EAAE,oBAAC,SAAD;IAAW,SAAS,EAAEN,MAAM,CAACS;;CAJvC;AAOA,AAAO,SAASC,WAAT,QAI0B;;;6BAH7Bd,QAG6B;MAH7BA,QAG6B,+BAHlB,IAGkB;0BAF7BC,KAE6B;MAF7BA,KAE6B,4BAFrB,MAEqB;MAD7BC,QAC6B,SAD7BA,QAC6B;SAEzB;IACI,SAAS,EAAEC,UAAU,mDAChBC,MAAM,CAACC,IADS,EACF,IADE,iCAEhBD,MAAM,CAACG,IAFS,EAEFN,KAAK,KAAK,MAFR,iCAGhBG,MAAM,CAACI,GAHS,EAGHP,KAAK,KAAK,KAHP,iCAIhBG,MAAM,CAACK,OAJS,EAICR,KAAK,KAAK,SAJX,iCAKhBG,MAAM,CAACM,IALS,EAKFT,KAAK,KAAK,MALR,iBADzB;iBAQeC;KAEVU,WAAW,CAACX,KAAD,CAVhB,EAWI;IAAK,SAAS,EAAEG,MAAM,CAACO;KAAOX,QAA9B,CAXJ,CADJ;;;;;"}