{"version":3,"file":"index.js","sources":["../../../../components/Alert/index.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { AlertCheck, AlertInfo, AlertWarning } from '../../icons/index.jsx';\n\nimport styles from './index.module.scss';\n\ninterface BannerPropTypes {\n    /**\n     * Text within the alert\n     */\n    children?: React.ReactNode;\n    /**\n     * Defines the style of the alert\n     */\n    theme?: 'good' | 'bad' | 'warning' | 'info';\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nexport function BannerAlert({\n    children = null,\n    theme = 'info',\n    dataTest,\n}: BannerPropTypes): JSX.Element {\n    return (\n        <div\n            className={classNames({\n                [styles.root]: true,\n                [styles.banner]: true,\n                [styles.good]: theme === 'good',\n                [styles.bad]: theme === 'bad',\n                [styles.warning]: theme === 'warning',\n                [styles.info]: theme === 'info',\n            })}\n            data-test={dataTest}\n        >\n            <div className={styles.text}>{children}</div>\n        </div>\n    );\n}\n\ninterface InPagePropTypes {\n    /**\n     * Text within the alert\n     */\n    children?: React.ReactNode;\n    /**\n     * Defines the style of the alert\n     */\n    theme?: 'good' | 'bad' | 'warning' | 'info';\n    /**\n     * A selector to hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nconst ALERT_ICONS = {\n    good: <AlertCheck className={styles.icon} />,\n    bad: <AlertWarning className={styles.icon} />,\n    warning: <AlertWarning className={styles.icon} />,\n    info: <AlertInfo className={styles.icon} />,\n};\n\nexport function InPageAlert({\n    children = null,\n    theme = 'info',\n    dataTest,\n}: InPagePropTypes): JSX.Element {\n    return (\n        <div\n            className={classNames({\n                [styles.root]: true,\n                [styles.good]: theme === 'good',\n                [styles.bad]: theme === 'bad',\n                [styles.warning]: theme === 'warning',\n                [styles.info]: theme === 'info',\n            })}\n            data-test={dataTest}\n        >\n            {ALERT_ICONS[theme]}\n            <div className={styles.text}>{children}</div>\n        </div>\n    );\n}\n"],"names":["BannerAlert","children","theme","dataTest","React","classNames","styles","root","banner","good","bad","warning","info","text","ALERT_ICONS","AlertCheck","icon","AlertWarning","AlertInfo","InPageAlert"],"mappings":";;;;;;;;;;;;;;;;AAqBO,SAASA,WAAT,OAI0B;;;2BAH7BC,QAG6B;MAH7BA,QAG6B,8BAHlB,IAGkB;wBAF7BC,KAE6B;MAF7BA,KAE6B,2BAFrB,MAEqB;MAD7BC,QAC6B,QAD7BA,QAC6B;SAEzBC;IACI,SAAS,EAAEC,UAAU,0EAChBC,MAAM,CAACC,IADS,EACF,IADE,yDAEhBD,MAAM,CAACE,MAFS,EAEA,IAFA,yDAGhBF,MAAM,CAACG,IAHS,EAGFP,KAAK,KAAK,MAHR,yDAIhBI,MAAM,CAACI,GAJS,EAIHR,KAAK,KAAK,KAJP,yDAKhBI,MAAM,CAACK,OALS,EAKCT,KAAK,KAAK,SALX,yDAMhBI,MAAM,CAACM,IANS,EAMFV,KAAK,KAAK,MANR,gBADzB;iBASeC;KAEXC;IAAK,SAAS,EAAEE,MAAM,CAACO;KAAOZ,QAA9B,CAXJ,CADJ;;AAgCJ,IAAMa,WAAW,GAAG;EAChBL,IAAI,EAAEL,6BAACW,kBAAD;IAAY,SAAS,EAAET,MAAM,CAACU;IADpB;EAEhBN,GAAG,EAAEN,6BAACa,oBAAD;IAAc,SAAS,EAAEX,MAAM,CAACU;IAFrB;EAGhBL,OAAO,EAAEP,6BAACa,oBAAD;IAAc,SAAS,EAAEX,MAAM,CAACU;IAHzB;EAIhBJ,IAAI,EAAER,6BAACc,iBAAD;IAAW,SAAS,EAAEZ,MAAM,CAACU;;CAJvC;AAOA,AAAO,SAASG,WAAT,QAI0B;;;6BAH7BlB,QAG6B;MAH7BA,QAG6B,+BAHlB,IAGkB;0BAF7BC,KAE6B;MAF7BA,KAE6B,4BAFrB,MAEqB;MAD7BC,QAC6B,SAD7BA,QAC6B;SAEzBC;IACI,SAAS,EAAEC,UAAU,4EAChBC,MAAM,CAACC,IADS,EACF,IADE,0DAEhBD,MAAM,CAACG,IAFS,EAEFP,KAAK,KAAK,MAFR,0DAGhBI,MAAM,CAACI,GAHS,EAGHR,KAAK,KAAK,KAHP,0DAIhBI,MAAM,CAACK,OAJS,EAICT,KAAK,KAAK,SAJX,0DAKhBI,MAAM,CAACM,IALS,EAKFV,KAAK,KAAK,MALR,iBADzB;iBAQeC;KAEVW,WAAW,CAACZ,KAAD,CAVhB,EAWIE;IAAK,SAAS,EAAEE,MAAM,CAACO;KAAOZ,QAA9B,CAXJ,CADJ;;;;;;"}