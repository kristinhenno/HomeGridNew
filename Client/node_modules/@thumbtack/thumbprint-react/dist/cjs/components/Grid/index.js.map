{"version":3,"file":"index.js","sources":["../../../../components/Grid/index.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport warning from 'warning';\n\nimport styles from './index.module.scss';\n\nconst { Provider, Consumer } = React.createContext({\n    gutter: 'normal',\n    isWithinGrid: false,\n});\n\ninterface ColumnPropTypes {\n    /**\n     * Column contents.\n     */\n    children?: React.ReactNode;\n    /**\n     * Default width of the column as a fraction of the grid out of 12, to be shown at all\n     * breakpoints except those covered by the three optional props below.\n     */\n    base?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    /**\n     * Width of the column as a fraction of the grid out of 12, to be shown in viewports wider\n     * than `small`.\n     */\n    aboveSmall?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    /**\n     * Width of the column as a fraction of the grid out of 12, to be shown in viewports wider\n     * than `medium`.\n     */\n    aboveMedium?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    /**\n     * Width of the column as a fraction of the grid out of 12, to be shown in viewports wider\n     * than `large`.\n     */\n    aboveLarge?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nexport function GridColumn({\n    children,\n    base = 12,\n    aboveSmall,\n    aboveMedium,\n    aboveLarge,\n    dataTest,\n}: ColumnPropTypes): JSX.Element {\n    return (\n        <Consumer>\n            {({ gutter, isWithinGrid }): JSX.Element => {\n                warning(isWithinGrid, '`GridColumn` must be an immediate child of a `Grid`');\n\n                return (\n                    <div\n                        className={classNames({\n                            [styles.col]: true,\n                            [styles.colWide]: gutter === 'wide',\n                            [styles.colFlush]: gutter === 'flush',\n                            [styles[`col${base}`]]: true,\n                            [styles[`aboveSmallCol${aboveSmall}`]]: aboveSmall,\n                            [styles[`aboveMediumCol${aboveMedium}`]]: aboveMedium,\n                            [styles[`aboveLargeCol${aboveLarge}`]]: aboveLarge,\n                        })}\n                        data-test={dataTest}\n                    >\n                        {children}\n                    </div>\n                );\n            }}\n        </Consumer>\n    );\n}\n\ninterface GridPropTypes {\n    /**\n     * Grid contents.\n     */\n    children?: React.ReactNode;\n    /**\n     * Controls the amount of space between columns in the grid.\n     */\n    gutter?: 'normal' | 'wide' | 'flush';\n    /**\n     * A selector hook into the React component for use in automated testing environments.\n     */\n    dataTest?: string;\n}\n\nexport function Grid({ children, gutter = 'normal', dataTest }: GridPropTypes): JSX.Element {\n    return (\n        <div\n            className={classNames({\n                [styles.grid]: true,\n                [styles.gridWide]: gutter === 'wide',\n                [styles.gridFlush]: gutter === 'flush',\n            })}\n            data-test={dataTest}\n        >\n            <Provider value={{ gutter, isWithinGrid: true }}>{children}</Provider>\n        </div>\n    );\n}\n"],"names":["React","createContext","gutter","isWithinGrid","Provider","Consumer","GridColumn","children","base","aboveSmall","aboveMedium","aboveLarge","dataTest","warning","classNames","styles","col","colWide","colFlush","Grid","grid","gridWide","gridFlush"],"mappings":";;;;;;;;;;;2BAM+BA,cAAK,CAACC,aAAN,CAAoB;EAC/CC,MAAM,EAAE,QADuC;EAE/CC,YAAY,EAAE;CAFa;IAAvBC,gCAAAA;IAAUC,gCAAAA;;AAoClB,AAAO,SAASC,UAAT,OAO0B;MAN7BC,QAM6B,QAN7BA,QAM6B;uBAL7BC,IAK6B;MAL7BA,IAK6B,0BALtB,EAKsB;MAJ7BC,UAI6B,QAJ7BA,UAI6B;MAH7BC,WAG6B,QAH7BA,WAG6B;MAF7BC,UAE6B,QAF7BA,UAE6B;MAD7BC,QAC6B,QAD7BA,QAC6B;SAEzBZ,6BAAC,QAAD,QACK,iBAA2C;;;QAAxCE,MAAwC,SAAxCA,MAAwC;QAAhCC,YAAgC,SAAhCA,YAAgC;IACxCU,OAAO,CAACV,YAAD,EAAe,qDAAf,CAAP;WAGIH;MACI,SAAS,EAAEc,UAAU,0EAChBC,MAAM,CAACC,GADS,EACH,IADG,yDAEhBD,MAAM,CAACE,OAFS,EAECf,MAAM,KAAK,MAFZ,yDAGhBa,MAAM,CAACG,QAHS,EAGEhB,MAAM,KAAK,OAHb,yDAIhBa,MAAM,cAAOP,IAAP,EAJU,EAIO,IAJP,yDAKhBO,MAAM,wBAAiBN,UAAjB,EALU,EAKuBA,UALvB,yDAMhBM,MAAM,yBAAkBL,WAAlB,EANU,EAMyBA,WANzB,yDAOhBK,MAAM,wBAAiBJ,UAAjB,EAPU,EAOuBA,UAPvB,gBADzB;mBAUeC;OAEVL,QAZL,CADJ;GAJR,CADJ;;AAyCJ,AAAO,SAASY,IAAT,QAAqF;;;MAArEZ,QAAqE,SAArEA,QAAqE;2BAA3DL,MAA2D;MAA3DA,MAA2D,6BAAlD,QAAkD;MAAxCU,QAAwC,SAAxCA,QAAwC;SAEpFZ;IACI,SAAS,EAAEc,UAAU,4EAChBC,MAAM,CAACK,IADS,EACF,IADE,0DAEhBL,MAAM,CAACM,QAFS,EAEEnB,MAAM,KAAK,MAFb,0DAGhBa,MAAM,CAACO,SAHS,EAGGpB,MAAM,KAAK,OAHd,iBADzB;iBAMeU;KAEXZ,6BAAC,QAAD;IAAU,KAAK,EAAE;MAAEE,MAAM,EAANA,MAAF;MAAUC,YAAY,EAAE;;KAASI,QAAlD,CARJ,CADJ;;;;;;"}